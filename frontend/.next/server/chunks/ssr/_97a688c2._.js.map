{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/components/atoms/DraggableItem.tsx"],"sourcesContent":["\"use client\"\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\n\r\ninterface GameItem {\r\n  id: string;\r\n  name: string;\r\n  category: string;\r\n  icon: string;\r\n  color: string;\r\n}\r\n\r\ninterface DraggableItemProps {\r\n  item: GameItem;\r\n  onDragStart: (item: GameItem) => void;\r\n}\r\n\r\nexport function DraggableItem ({ item, onDragStart }: DraggableItemProps){\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const itemRef = useRef<HTMLDivElement>(null);\r\n  const iconRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!itemRef.current || !iconRef.current) return;\r\n\r\n    // Animación de entrada con GSAP\r\n    gsap.fromTo(itemRef.current, \r\n      { \r\n        scale: 0, \r\n        opacity: 0, \r\n        rotation: -180 \r\n      },\r\n      { \r\n        scale: 1, \r\n        opacity: 1, \r\n        rotation: 0, \r\n        duration: 0.8, \r\n        ease: \"back.out(1.7)\",\r\n        delay: Math.random() * 0.5\r\n      }\r\n    );\r\n\r\n    // Animación de pulso neural para el ícono\r\n    gsap.to(iconRef.current, {\r\n      scale: 1.1,\r\n      duration: 2,\r\n      repeat: -1,\r\n      yoyo: true,\r\n      ease: \"power2.inOut\"\r\n    });\r\n\r\n    // Animación de flotación suave\r\n    gsap.to(itemRef.current, {\r\n      y: -10,\r\n      duration: 3,\r\n      repeat: -1,\r\n      yoyo: true,\r\n      ease: \"power1.inOut\",\r\n      delay: Math.random() * 2\r\n    });\r\n  }, []);\r\n\r\n  const handleDragStart = (e: React.DragEvent) => {\r\n    onDragStart(item);\r\n    setIsDragging(true);\r\n    e.dataTransfer.effectAllowed = 'move';\r\n    \r\n    // Animación de arrastre con GSAP\r\n    if (itemRef.current) {\r\n      gsap.to(itemRef.current, {\r\n        scale: 1.2,\r\n        rotation: 15,\r\n        opacity: 0.8,\r\n        duration: 0.3,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n    \r\n    console.log('DragStart en DraggableItem:', item.name);\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    setIsDragging(false);\r\n    \r\n    // Restaurar estado normal con GSAP\r\n    if (itemRef.current) {\r\n      gsap.to(itemRef.current, {\r\n        scale: 1,\r\n        rotation: 0,\r\n        opacity: 1,\r\n        duration: 0.4,\r\n        ease: \"elastic.out(1, 0.5)\"\r\n      });\r\n    }\r\n    \r\n    console.log('DragEnd en DraggableItem:', item.name);\r\n  };\r\n\r\n  const handleMouseEnter = () => {\r\n    if (!isDragging && itemRef.current) {\r\n      gsap.to(itemRef.current, {\r\n        scale: 1.05,\r\n        duration: 0.3,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (!isDragging && itemRef.current) {\r\n      gsap.to(itemRef.current, {\r\n        scale: 1,\r\n        duration: 0.3,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={itemRef}\r\n      draggable\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      className={`\r\n        ${item.color} \r\n        p-4 rounded-2xl border-2 border-gray-200 shadow-md cursor-move \r\n        hover:shadow-lg hover:border-blue-300\r\n        flex flex-col items-center gap-2\r\n        select-none\r\n      `}\r\n    >\r\n      <div ref={iconRef} className=\"text-3xl\">\r\n        {item.icon}\r\n      </div>\r\n      <span className=\"text-sm font-semibold text-gray-700 text-center\">\r\n        {item.name}\r\n      </span>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAiBO,SAAS,cAAe,EAAE,IAAI,EAAE,WAAW,EAAsB;IACtE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IACvC,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,QAAQ,OAAO,IAAI,CAAC,QAAQ,OAAO,EAAE;QAE1C,gCAAgC;QAChC,6IAAA,CAAA,OAAI,CAAC,MAAM,CAAC,QAAQ,OAAO,EACzB;YACE,OAAO;YACP,SAAS;YACT,UAAU,CAAC;QACb,GACA;YACE,OAAO;YACP,SAAS;YACT,UAAU;YACV,UAAU;YACV,MAAM;YACN,OAAO,KAAK,MAAM,KAAK;QACzB;QAGF,0CAA0C;QAC1C,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;YACvB,OAAO;YACP,UAAU;YACV,QAAQ,CAAC;YACT,MAAM;YACN,MAAM;QACR;QAEA,+BAA+B;QAC/B,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;YACvB,GAAG,CAAC;YACJ,UAAU;YACV,QAAQ,CAAC;YACT,MAAM;YACN,MAAM;YACN,OAAO,KAAK,MAAM,KAAK;QACzB;IACF,GAAG,EAAE;IAEL,MAAM,kBAAkB,CAAC;QACvB,YAAY;QACZ,cAAc;QACd,EAAE,YAAY,CAAC,aAAa,GAAG;QAE/B,iCAAiC;QACjC,IAAI,QAAQ,OAAO,EAAE;YACnB,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;gBACvB,OAAO;gBACP,UAAU;gBACV,SAAS;gBACT,UAAU;gBACV,MAAM;YACR;QACF;QAEA,QAAQ,GAAG,CAAC,+BAA+B,KAAK,IAAI;IACtD;IAEA,MAAM,gBAAgB;QACpB,cAAc;QAEd,mCAAmC;QACnC,IAAI,QAAQ,OAAO,EAAE;YACnB,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;gBACvB,OAAO;gBACP,UAAU;gBACV,SAAS;gBACT,UAAU;gBACV,MAAM;YACR;QACF;QAEA,QAAQ,GAAG,CAAC,6BAA6B,KAAK,IAAI;IACpD;IAEA,MAAM,mBAAmB;QACvB,IAAI,CAAC,cAAc,QAAQ,OAAO,EAAE;YAClC,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;gBACvB,OAAO;gBACP,UAAU;gBACV,MAAM;YACR;QACF;IACF;IAEA,MAAM,mBAAmB;QACvB,IAAI,CAAC,cAAc,QAAQ,OAAO,EAAE;YAClC,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;gBACvB,OAAO;gBACP,UAAU;gBACV,MAAM;YACR;QACF;IACF;IAEA,qBACE,8OAAC;QACC,KAAK;QACL,SAAS;QACT,aAAa;QACb,WAAW;QACX,cAAc;QACd,cAAc;QACd,WAAW,CAAC;QACV,EAAE,KAAK,KAAK,CAAC;;;;;MAKf,CAAC;;0BAED,8OAAC;gBAAI,KAAK;gBAAS,WAAU;0BAC1B,KAAK,IAAI;;;;;;0BAEZ,8OAAC;gBAAK,WAAU;0BACb,KAAK,IAAI;;;;;;;;;;;;AAIlB","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/components/atoms/DropZone.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport { CheckCircle } from 'lucide-react';\r\nimport { gsap } from 'gsap';\r\n\r\ninterface GameSet {\r\n  id: string;\r\n  name: string;\r\n  color: string;\r\n  description: string;\r\n  icon: any;\r\n}\r\n\r\ninterface DropZoneProps {\r\n  set: GameSet;\r\n  onDrop: (setId: string) => void;\r\n  isCompleted: boolean;\r\n  itemCount: number;\r\n}\r\n\r\nexport default function DropZone ({ set, onDrop, isCompleted, itemCount }: DropZoneProps) {\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const zoneRef = useRef<HTMLDivElement>(null);\r\n  const checkRef = useRef<SVGSVGElement>(null);\r\n  const synapticRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!zoneRef.current) return;\r\n\r\n    // Animación de entrada\r\n    gsap.fromTo(zoneRef.current, \r\n      { \r\n        scale: 0.8, \r\n        opacity: 0,\r\n        rotateY: 90\r\n      },\r\n      { \r\n        scale: 1, \r\n        opacity: 1, \r\n        rotateY: 0,\r\n        duration: 0.6, \r\n        ease: \"power2.out\",\r\n        delay: 0.2\r\n      }\r\n    );\r\n\r\n    // Animación de flujo sináptico continuo\r\n    if (synapticRef.current) {\r\n      gsap.to(synapticRef.current, {\r\n        x: \"100%\",\r\n        duration: 2,\r\n        repeat: -1,\r\n        ease: \"power2.inOut\"\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isCompleted && checkRef.current) {\r\n      // Animación de éxito\r\n      gsap.fromTo(checkRef.current, \r\n        { \r\n          scale: 0, \r\n          rotation: -180,\r\n          opacity: 0 \r\n        },\r\n        { \r\n          scale: 1, \r\n          rotation: 0,\r\n          opacity: 1,\r\n          duration: 0.8, \r\n          ease: \"elastic.out(1, 0.5)\"\r\n        }\r\n      );\r\n\r\n      // Efecto de celebración en la zona completa\r\n      if (zoneRef.current) {\r\n        gsap.to(zoneRef.current, {\r\n          boxShadow: \"0 0 30px rgba(34, 197, 94, 0.5)\",\r\n          duration: 0.5,\r\n          yoyo: true,\r\n          repeat: 3\r\n        });\r\n      }\r\n    }\r\n  }, [isCompleted]);\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragOver(true);\r\n    \r\n    if (zoneRef.current) {\r\n      gsap.to(zoneRef.current, {\r\n        scale: 1.02,\r\n        borderColor: \"#3b82f6\",\r\n        duration: 0.3,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDragLeave = () => {\r\n    setIsDragOver(false);\r\n    \r\n    if (zoneRef.current) {\r\n      gsap.to(zoneRef.current, {\r\n        scale: 1,\r\n        duration: 0.3,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragOver(false);\r\n    onDrop(set.id);\r\n    \r\n    // Animación de recepción exitosa\r\n    if (zoneRef.current) {\r\n      gsap.to(zoneRef.current, {\r\n        scale: 1.05,\r\n        duration: 0.2,\r\n        yoyo: true,\r\n        repeat: 1,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n    \r\n    console.log('Drop en DropZone:', set.id);\r\n  };\r\n\r\n  const IconComponent = set.icon;\r\n\r\n  return (\r\n    <div\r\n      ref={zoneRef}\r\n      onDragOver={handleDragOver}\r\n      onDragLeave={handleDragLeave}\r\n      onDrop={handleDrop}\r\n      className={`\r\n        ${set.color}\r\n        ${isCompleted ? 'border-green-400 bg-green-50' : ''}\r\n        p-6 rounded-2xl border-2 min-h-[120px]\r\n        transition-colors duration-300\r\n        relative overflow-hidden\r\n      `}\r\n    >\r\n      {/* Efecto de fondo neuronal */}\r\n      <div className=\"absolute inset-0 opacity-10\">\r\n        <div ref={synapticRef} className=\"h-1 bg-current w-full\"></div>\r\n      </div>\r\n      \r\n      <div className=\"relative z-10\">\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <IconComponent className=\"w-6 h-6 text-gray-600\" />\r\n            <h3 className=\"text-lg font-bold text-gray-800\">\r\n              {set.name}\r\n            </h3>\r\n          </div>\r\n          \r\n          {isCompleted && (\r\n            <CheckCircle ref={checkRef} className=\"w-6 h-6 text-green-500\" />\r\n          )}\r\n          \r\n          <div className=\"bg-white rounded-full px-3 py-1 text-sm font-semibold text-gray-600\">\r\n            {itemCount} elementos\r\n          </div>\r\n        </div>\r\n        \r\n        <p className=\"text-sm text-gray-600 mb-3\">\r\n          {set.description}\r\n        </p>\r\n        \r\n        {isDragOver && (\r\n          <div className=\"text-center text-blue-600 font-semibold\">\r\n            ⚡ Estableciendo conexión sináptica...\r\n          </div>\r\n        )}\r\n        \r\n        {isCompleted && (\r\n          <div className=\"text-center text-green-600 font-semibold\">\r\n            ✅ Red neural activada\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/components/molecules/GameHeader.tsx"],"sourcesContent":["import { Brain, Trophy, Target } from 'lucide-react';\r\nimport { useRef, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\n\r\ninterface GameHeaderProps {\r\n  score: number;\r\n  completedSets: number;\r\n  totalSets: number;\r\n}\r\n\r\nexport default function GameHeader ({ score, completedSets, totalSets }: GameHeaderProps) {\r\n  const progress = (completedSets / totalSets) * 100;\r\n  const headerRef = useRef<HTMLDivElement>(null);\r\n  const brainRef = useRef<SVGSVGElement>(null);\r\n  const progressBarRef = useRef<HTMLDivElement>(null);\r\n  const scoreRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!headerRef.current || !brainRef.current) return;\r\n\r\n    // Animación de entrada del header\r\n    gsap.fromTo(headerRef.current, \r\n      { \r\n        y: -100, \r\n        opacity: 0 \r\n      },\r\n      { \r\n        y: 0, \r\n        opacity: 1, \r\n        duration: 1, \r\n        ease: \"bounce.out\" \r\n      }\r\n    );\r\n\r\n    // Animación de pulso neural continuo para el cerebro\r\n    gsap.to(brainRef.current, {\r\n      scale: 1.1,\r\n      duration: 1.5,\r\n      repeat: -1,\r\n      yoyo: true,\r\n      ease: \"power2.inOut\"\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Animación de la barra de progreso\r\n    if (progressBarRef.current) {\r\n      gsap.to(progressBarRef.current, {\r\n        width: `${progress}%`,\r\n        duration: 1,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n  }, [progress]);\r\n\r\n  useEffect(() => {\r\n    // Animación del score cuando cambia\r\n    if (scoreRef.current) {\r\n      gsap.fromTo(scoreRef.current, \r\n        { \r\n          scale: 1.3, \r\n          color: \"#f59e0b\" \r\n        },\r\n        { \r\n          scale: 1, \r\n          color: \"#92400e\",\r\n          duration: 0.5, \r\n          ease: \"elastic.out(1, 0.5)\" \r\n        }\r\n      );\r\n    }\r\n  }, [score]);\r\n\r\n  return (\r\n    <div ref={headerRef} className=\"bg-white rounded-3xl p-6 mb-8 shadow-xl border border-gray-200\">\r\n      <div className=\"flex flex-col md:flex-row items-center justify-between gap-6\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"bg-gradient-to-br from-blue-500 to-purple-600 p-4 rounded-2xl\">\r\n            <Brain ref={brainRef} className=\"w-8 h-8 text-white\" />\r\n          </div>\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-gray-800\">\r\n              🧠 Clasifica y Agrupa\r\n            </h1>\r\n            <p className=\"text-gray-600\">\r\n              Conecta los elementos con sus conjuntos neuronales\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-6\">\r\n          <div className=\"flex items-center gap-2 bg-yellow-50 px-4 py-2 rounded-xl border border-yellow-200\">\r\n            <Trophy className=\"w-5 h-5 text-yellow-600\" />\r\n            <span ref={scoreRef} className=\"font-bold text-yellow-800\">{score} pts</span>\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-2 bg-blue-50 px-4 py-2 rounded-xl border border-blue-200\">\r\n            <Target className=\"w-5 h-5 text-blue-600\" />\r\n            <span className=\"font-bold text-blue-800\">\r\n              {completedSets}/{totalSets} conjuntos\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Barra de progreso neuronal */}\r\n      <div className=\"mt-6\">\r\n        <div className=\"flex justify-between items-center mb-2\">\r\n          <span className=\"text-sm font-semibold text-gray-600\">\r\n            Progreso de Conexiones Sinápticas\r\n          </span>\r\n          <span className=\"text-sm font-bold text-blue-600\">\r\n            {Math.round(progress)}%\r\n          </span>\r\n        </div>\r\n        <div className=\"w-full bg-gray-200 rounded-full h-3 overflow-hidden\">\r\n          <div \r\n            ref={progressBarRef}\r\n            className=\"h-full bg-gradient-to-r from-blue-500 to-green-500 rounded-full\"\r\n            style={{ width: '0%' }}\r\n          >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AACA;AACA;;;;;AAQe,SAAS,WAAY,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAmB;IACtF,MAAM,WAAW,AAAC,gBAAgB,YAAa;IAC/C,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IACzC,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAiB;IACvC,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAC9C,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAExC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,UAAU,OAAO,IAAI,CAAC,SAAS,OAAO,EAAE;QAE7C,kCAAkC;QAClC,6IAAA,CAAA,OAAI,CAAC,MAAM,CAAC,UAAU,OAAO,EAC3B;YACE,GAAG,CAAC;YACJ,SAAS;QACX,GACA;YACE,GAAG;YACH,SAAS;YACT,UAAU;YACV,MAAM;QACR;QAGF,qDAAqD;QACrD,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,SAAS,OAAO,EAAE;YACxB,OAAO;YACP,UAAU;YACV,QAAQ,CAAC;YACT,MAAM;YACN,MAAM;QACR;IACF,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,oCAAoC;QACpC,IAAI,eAAe,OAAO,EAAE;YAC1B,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,eAAe,OAAO,EAAE;gBAC9B,OAAO,GAAG,SAAS,CAAC,CAAC;gBACrB,UAAU;gBACV,MAAM;YACR;QACF;IACF,GAAG;QAAC;KAAS;IAEb,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,oCAAoC;QACpC,IAAI,SAAS,OAAO,EAAE;YACpB,6IAAA,CAAA,OAAI,CAAC,MAAM,CAAC,SAAS,OAAO,EAC1B;gBACE,OAAO;gBACP,OAAO;YACT,GACA;gBACE,OAAO;gBACP,OAAO;gBACP,UAAU;gBACV,MAAM;YACR;QAEJ;IACF,GAAG;QAAC;KAAM;IAEV,qBACE,8OAAC;QAAI,KAAK;QAAW,WAAU;;0BAC7B,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,oMAAA,CAAA,QAAK;oCAAC,KAAK;oCAAU,WAAU;;;;;;;;;;;0CAElC,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;kDAAmC;;;;;;kDAGjD,8OAAC;wCAAE,WAAU;kDAAgB;;;;;;;;;;;;;;;;;;kCAMjC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,sMAAA,CAAA,SAAM;wCAAC,WAAU;;;;;;kDAClB,8OAAC;wCAAK,KAAK;wCAAU,WAAU;;4CAA6B;4CAAM;;;;;;;;;;;;;0CAGpE,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,sMAAA,CAAA,SAAM;wCAAC,WAAU;;;;;;kDAClB,8OAAC;wCAAK,WAAU;;4CACb;4CAAc;4CAAE;4CAAU;;;;;;;;;;;;;;;;;;;;;;;;;0BAOnC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;0CAAsC;;;;;;0CAGtD,8OAAC;gCAAK,WAAU;;oCACb,KAAK,KAAK,CAAC;oCAAU;;;;;;;;;;;;;kCAG1B,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,KAAK;4BACL,WAAU;4BACV,OAAO;gCAAE,OAAO;4BAAK;;;;;;;;;;;;;;;;;;;;;;;AAOjC","debugId":null}},
    {"offset": {"line": 643, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\r\n\r\n// Adaptado de shadcn/ui toast\r\nimport * as React from \"react\"\r\n\r\nimport type { ToastActionElement, ToastProps } from \"@/components/ui/toast\"\r\n\r\nconst TOAST_LIMIT = 5\r\nconst TOAST_REMOVE_DELAY = 5000\r\n\r\ntype ToasterToast = ToastProps & {\r\n  id: string\r\n  title?: React.ReactNode\r\n  description?: React.ReactNode\r\n  action?: ToastActionElement\r\n}\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: \"ADD_TOAST\",\r\n  UPDATE_TOAST: \"UPDATE_TOAST\",\r\n  DISMISS_TOAST: \"DISMISS_TOAST\",\r\n  REMOVE_TOAST: \"REMOVE_TOAST\",\r\n} as const\r\n\r\nlet count = 0\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_VALUE\r\n  return count.toString()\r\n}\r\n\r\ntype ActionType = typeof actionTypes\r\n\r\ntype Action =\r\n  | {\r\n      type: ActionType[\"ADD_TOAST\"]\r\n      toast: ToasterToast\r\n    }\r\n  | {\r\n      type: ActionType[\"UPDATE_TOAST\"]\r\n      toast: Partial<ToasterToast>\r\n    }\r\n  | {\r\n      type: ActionType[\"DISMISS_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n  | {\r\n      type: ActionType[\"REMOVE_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n\r\ninterface State {\r\n  toasts: ToasterToast[]\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\n\r\nconst reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TOAST:\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      }\r\n\r\n    case actionTypes.UPDATE_TOAST:\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) => (t.id === action.toast.id ? { ...t, ...action.toast } : t)),\r\n      }\r\n\r\n    case actionTypes.DISMISS_TOAST: {\r\n      const { toastId } = action\r\n\r\n      // Dismiss all toasts\r\n      if (toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: state.toasts.map((t) => ({\r\n            ...t,\r\n            open: false,\r\n          })),\r\n        }\r\n      }\r\n\r\n      // Dismiss a specific toast\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) => (t.id === toastId ? { ...t, open: false } : t)),\r\n      }\r\n    }\r\n\r\n    case actionTypes.REMOVE_TOAST: {\r\n      const { toastId } = action\r\n\r\n      // Remove all toasts\r\n      if (toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        }\r\n      }\r\n\r\n      // Remove a specific toast\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== toastId),\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst listeners: Array<(state: State) => void> = []\r\n\r\nlet memoryState: State = { toasts: [] }\r\n\r\nfunction dispatch(action: Action) {\r\n  memoryState = reducer(memoryState, action)\r\n  listeners.forEach((listener) => {\r\n    listener(memoryState)\r\n  })\r\n}\r\n\r\ntype Toast = Omit<ToasterToast, \"id\">\r\n\r\nfunction toast({ ...props }: Toast) {\r\n  const id = genId()\r\n\r\n  const update = (props: ToasterToast) =>\r\n    dispatch({\r\n      type: actionTypes.UPDATE_TOAST,\r\n      toast: { ...props, id },\r\n    })\r\n\r\n  const dismiss = () => dispatch({ type: actionTypes.DISMISS_TOAST, toastId: id })\r\n\r\n  dispatch({\r\n    type: actionTypes.ADD_TOAST,\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) dismiss()\r\n      },\r\n    },\r\n  })\r\n\r\n  return {\r\n    id,\r\n    dismiss,\r\n    update,\r\n  }\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = React.useState<State>(memoryState)\r\n\r\n  React.useEffect(() => {\r\n    listeners.push(setState)\r\n    return () => {\r\n      const index = listeners.indexOf(setState)\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n      }\r\n    }\r\n  }, [state])\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId?: string) => dispatch({ type: actionTypes.DISMISS_TOAST, toastId }),\r\n  }\r\n}\r\n\r\nexport { useToast, toast }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 792, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/components/templates/GamesTemplate.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useRef, ReactNode } from 'react';\r\nimport { DraggableItem } from '@/components/atoms/DraggableItem';\r\nimport DropZone from '@/components/atoms/DropZone';\r\nimport GameHeader from '@/components/molecules/GameHeader';\r\nimport { useToast } from \"@/hooks/use-toast\";\r\n\r\ninterface GameItem {\r\n  id: string;\r\n  name: string;\r\n  category: string;\r\n  icon: string;\r\n  color: string;\r\n}\r\n\r\ninterface GameSet {\r\n  id: string;\r\n  name: string;\r\n  color: string;\r\n  description: string;\r\n  icon: any;\r\n}\r\n\r\ninterface GameConfig {\r\n  title: string;\r\n  description: string;\r\n  backgroundGradient: string;\r\n  headerIcon: any;\r\n  setsTitle: string;\r\n  setsIcon: any;\r\n  items: GameItem[];\r\n  sets: GameSet[];\r\n  successMessages: {\r\n    correct: string;\r\n    setComplete: string;\r\n    gameComplete: string;\r\n    incorrect: string;\r\n  };\r\n  scoring: {\r\n    correctPoints: number;\r\n    bonusPoints?: number;\r\n  };\r\n}\r\n\r\ninterface GamesTemplateProps {\r\n  config: GameConfig;\r\n  onGameComplete?: (score: number) => void;\r\n  customHeader?: ReactNode;\r\n  customSuccessScreen?: (score: number) => ReactNode;\r\n}\r\n\r\nconst GamesTemplate: React.FC<GamesTemplateProps> = ({\r\n  config,\r\n  onGameComplete,\r\n  customHeader,\r\n  customSuccessScreen,\r\n}) => {\r\n  const { toast } = useToast();\r\n  \r\n  const [items, setItems] = useState(config.items);\r\n  const [score, setScore] = useState(0);\r\n  const [completedSets, setCompletedSets] = useState<string[]>([]);\r\n  const dragItem = useRef<GameItem | null>(null);\r\n\r\n  const handleDragStart = (item: GameItem) => {\r\n    dragItem.current = item;\r\n    console.log('Iniciando arrastre:', item.name);\r\n  };\r\n\r\n  const handleDrop = (setId: string) => {\r\n    if (!dragItem.current) return;\r\n\r\n    const item = dragItem.current;\r\n    console.log('Soltando:', item.name, 'en conjunto:', setId);\r\n\r\n    if (item.category === setId) {\r\n      // Clasificación correcta\r\n      setItems(prev => prev.filter(i => i.id !== item.id));\r\n      setScore(prev => prev + config.scoring.correctPoints);\r\n      \r\n      toast({\r\n        title: config.successMessages.correct,\r\n        description: `${item.name} pertenece a ${config.sets.find(s => s.id === setId)?.name}`,\r\n        duration: 2000,\r\n      });\r\n\r\n      // Verificar si el conjunto está completo\r\n      const remainingItemsInSet = items.filter(i => i.category === setId && i.id !== item.id);\r\n      if (remainingItemsInSet.length === 0) {\r\n        setCompletedSets(prev => [...prev, setId]);\r\n        const newCompletedCount = completedSets.length + 1;\r\n        \r\n        // Bonus por completar conjunto\r\n        if (config.scoring.bonusPoints) {\r\n          setScore(prev => prev + config.scoring.bonusPoints!);\r\n        }\r\n        \r\n        toast({\r\n          title: config.successMessages.setComplete,\r\n          description: `Conjunto ${newCompletedCount} de ${config.sets.length} completado`,\r\n          duration: 3000,\r\n        });\r\n      }\r\n    } else {\r\n      // Clasificación incorrecta\r\n      toast({\r\n        title: config.successMessages.incorrect,\r\n        description: \"Intenta con otro conjunto\",\r\n        duration: 2000,\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n\r\n    dragItem.current = null;\r\n  };\r\n\r\n  const isGameComplete = completedSets.length === config.sets.length;\r\n\r\n  // Llamar callback cuando se complete el juego\r\n  if (isGameComplete && onGameComplete) {\r\n    onGameComplete(score);\r\n  }\r\n\r\n  const defaultSuccessScreen = (finalScore: number) => (\r\n    <div className=\"text-center py-16 gentle-float\">\r\n      <div className=\"bg-white rounded-3xl p-8 shadow-2xl border border-green-200\">\r\n        <div className=\"text-6xl mb-4\">🎉✨</div>\r\n        <h2 className=\"text-4xl font-bold text-green-600 mb-4\">\r\n          {config.successMessages.gameComplete}\r\n        </h2>\r\n        <p className=\"text-xl text-gray-600 mb-6\">\r\n          Has completado todas las clasificaciones correctamente\r\n        </p>\r\n        <div className=\"text-3xl font-bold text-blue-600\">\r\n          Puntuación Final: {finalScore} puntos\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={`min-h-screen ${config.backgroundGradient} p-4`}>\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        {customHeader || (\r\n          <GameHeader \r\n            score={score} \r\n            completedSets={completedSets.length} \r\n            totalSets={config.sets.length} \r\n          />\r\n        )}\r\n        \r\n        {isGameComplete ? (\r\n          customSuccessScreen ? customSuccessScreen(score) : defaultSuccessScreen(score)\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n            {/* Área de elementos arrastrables */}\r\n            <div className=\"space-y-6\">\r\n              <div className=\"bg-white rounded-2xl p-6 shadow-lg border border-gray-200\">\r\n                <h2 className=\"text-2xl font-bold text-gray-800 mb-4 flex items-center gap-2\">\r\n                  <config.headerIcon className=\"text-blue-500\" />\r\n                  {config.title}\r\n                </h2>\r\n                <p className=\"text-gray-600 mb-6\">\r\n                  {config.description}\r\n                </p>\r\n                <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-4\">\r\n                  {items.map((item) => (\r\n                    <DraggableItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      onDragStart={handleDragStart}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Área de conjuntos */}\r\n            <div className=\"space-y-4\">\r\n              <h2 className=\"text-2xl font-bold text-gray-800 flex items-center gap-2\">\r\n                <config.setsIcon className=\"text-green-500\" />\r\n                {config.setsTitle}\r\n              </h2>\r\n              {config.sets.map((set) => (\r\n                <DropZone\r\n                  key={set.id}\r\n                  set={set}\r\n                  onDrop={handleDrop}\r\n                  isCompleted={completedSets.includes(set.id)}\r\n                  itemCount={items.filter(item => item.category === set.id).length}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamesTemplate;"],"names":[],"mappings":"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","debugId":null}}]
}