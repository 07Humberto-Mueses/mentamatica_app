{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/components/atoms/DraggableItem.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DraggableItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DraggableItem() from the server but DraggableItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/atoms/DraggableItem.tsx <module evaluation>\",\n    \"DraggableItem\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,oEACA","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/components/atoms/DraggableItem.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DraggableItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DraggableItem() from the server but DraggableItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/atoms/DraggableItem.tsx\",\n    \"DraggableItem\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,gDACA","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/components/atoms/DropZone.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport { CheckCircle } from 'lucide-react';\r\nimport { gsap } from 'gsap';\r\n\r\ninterface GameSet {\r\n  id: string;\r\n  name: string;\r\n  color: string;\r\n  description: string;\r\n  icon: any;\r\n}\r\n\r\ninterface DropZoneProps {\r\n  set: GameSet;\r\n  onDrop: (setId: string) => void;\r\n  isCompleted: boolean;\r\n  itemCount: number;\r\n}\r\n\r\nexport default function DropZone ({ set, onDrop, isCompleted, itemCount }: DropZoneProps) {\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const zoneRef = useRef<HTMLDivElement>(null);\r\n  const checkRef = useRef<SVGSVGElement>(null);\r\n  const synapticRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!zoneRef.current) return;\r\n\r\n    // Animación de entrada\r\n    gsap.fromTo(zoneRef.current, \r\n      { \r\n        scale: 0.8, \r\n        opacity: 0,\r\n        rotateY: 90\r\n      },\r\n      { \r\n        scale: 1, \r\n        opacity: 1, \r\n        rotateY: 0,\r\n        duration: 0.6, \r\n        ease: \"power2.out\",\r\n        delay: 0.2\r\n      }\r\n    );\r\n\r\n    // Animación de flujo sináptico continuo\r\n    if (synapticRef.current) {\r\n      gsap.to(synapticRef.current, {\r\n        x: \"100%\",\r\n        duration: 2,\r\n        repeat: -1,\r\n        ease: \"power2.inOut\"\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isCompleted && checkRef.current) {\r\n      // Animación de éxito\r\n      gsap.fromTo(checkRef.current, \r\n        { \r\n          scale: 0, \r\n          rotation: -180,\r\n          opacity: 0 \r\n        },\r\n        { \r\n          scale: 1, \r\n          rotation: 0,\r\n          opacity: 1,\r\n          duration: 0.8, \r\n          ease: \"elastic.out(1, 0.5)\"\r\n        }\r\n      );\r\n\r\n      // Efecto de celebración en la zona completa\r\n      if (zoneRef.current) {\r\n        gsap.to(zoneRef.current, {\r\n          boxShadow: \"0 0 30px rgba(34, 197, 94, 0.5)\",\r\n          duration: 0.5,\r\n          yoyo: true,\r\n          repeat: 3\r\n        });\r\n      }\r\n    }\r\n  }, [isCompleted]);\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragOver(true);\r\n    \r\n    if (zoneRef.current) {\r\n      gsap.to(zoneRef.current, {\r\n        scale: 1.02,\r\n        borderColor: \"#3b82f6\",\r\n        duration: 0.3,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDragLeave = () => {\r\n    setIsDragOver(false);\r\n    \r\n    if (zoneRef.current) {\r\n      gsap.to(zoneRef.current, {\r\n        scale: 1,\r\n        duration: 0.3,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragOver(false);\r\n    onDrop(set.id);\r\n    \r\n    // Animación de recepción exitosa\r\n    if (zoneRef.current) {\r\n      gsap.to(zoneRef.current, {\r\n        scale: 1.05,\r\n        duration: 0.2,\r\n        yoyo: true,\r\n        repeat: 1,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n    \r\n    console.log('Drop en DropZone:', set.id);\r\n  };\r\n\r\n  const IconComponent = set.icon;\r\n\r\n  return (\r\n    <div\r\n      ref={zoneRef}\r\n      onDragOver={handleDragOver}\r\n      onDragLeave={handleDragLeave}\r\n      onDrop={handleDrop}\r\n      className={`\r\n        ${set.color}\r\n        ${isCompleted ? 'border-green-400 bg-green-50' : ''}\r\n        p-6 rounded-2xl border-2 min-h-[120px]\r\n        transition-colors duration-300\r\n        relative overflow-hidden\r\n      `}\r\n    >\r\n      {/* Efecto de fondo neuronal */}\r\n      <div className=\"absolute inset-0 opacity-10\">\r\n        <div ref={synapticRef} className=\"h-1 bg-current w-full\"></div>\r\n      </div>\r\n      \r\n      <div className=\"relative z-10\">\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <IconComponent className=\"w-6 h-6 text-gray-600\" />\r\n            <h3 className=\"text-lg font-bold text-gray-800\">\r\n              {set.name}\r\n            </h3>\r\n          </div>\r\n          \r\n          {isCompleted && (\r\n            <CheckCircle ref={checkRef} className=\"w-6 h-6 text-green-500\" />\r\n          )}\r\n          \r\n          <div className=\"bg-white rounded-full px-3 py-1 text-sm font-semibold text-gray-600\">\r\n            {itemCount} elementos\r\n          </div>\r\n        </div>\r\n        \r\n        <p className=\"text-sm text-gray-600 mb-3\">\r\n          {set.description}\r\n        </p>\r\n        \r\n        {isDragOver && (\r\n          <div className=\"text-center text-blue-600 font-semibold\">\r\n            ⚡ Estableciendo conexión sináptica...\r\n          </div>\r\n        )}\r\n        \r\n        {isCompleted && (\r\n          <div className=\"text-center text-green-600 font-semibold\">\r\n            ✅ Red neural activada\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/components/molecules/GameHeader.tsx"],"sourcesContent":["import { Brain, Trophy, Target } from 'lucide-react';\r\nimport { useRef, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\n\r\ninterface GameHeaderProps {\r\n  score: number;\r\n  completedSets: number;\r\n  totalSets: number;\r\n}\r\n\r\nexport default function GameHeader ({ score, completedSets, totalSets }: GameHeaderProps) {\r\n  const progress = (completedSets / totalSets) * 100;\r\n  const headerRef = useRef<HTMLDivElement>(null);\r\n  const brainRef = useRef<SVGSVGElement>(null);\r\n  const progressBarRef = useRef<HTMLDivElement>(null);\r\n  const scoreRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!headerRef.current || !brainRef.current) return;\r\n\r\n    // Animación de entrada del header\r\n    gsap.fromTo(headerRef.current, \r\n      { \r\n        y: -100, \r\n        opacity: 0 \r\n      },\r\n      { \r\n        y: 0, \r\n        opacity: 1, \r\n        duration: 1, \r\n        ease: \"bounce.out\" \r\n      }\r\n    );\r\n\r\n    // Animación de pulso neural continuo para el cerebro\r\n    gsap.to(brainRef.current, {\r\n      scale: 1.1,\r\n      duration: 1.5,\r\n      repeat: -1,\r\n      yoyo: true,\r\n      ease: \"power2.inOut\"\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Animación de la barra de progreso\r\n    if (progressBarRef.current) {\r\n      gsap.to(progressBarRef.current, {\r\n        width: `${progress}%`,\r\n        duration: 1,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n  }, [progress]);\r\n\r\n  useEffect(() => {\r\n    // Animación del score cuando cambia\r\n    if (scoreRef.current) {\r\n      gsap.fromTo(scoreRef.current, \r\n        { \r\n          scale: 1.3, \r\n          color: \"#f59e0b\" \r\n        },\r\n        { \r\n          scale: 1, \r\n          color: \"#92400e\",\r\n          duration: 0.5, \r\n          ease: \"elastic.out(1, 0.5)\" \r\n        }\r\n      );\r\n    }\r\n  }, [score]);\r\n\r\n  return (\r\n    <div ref={headerRef} className=\"bg-white rounded-3xl p-6 mb-8 shadow-xl border border-gray-200\">\r\n      <div className=\"flex flex-col md:flex-row items-center justify-between gap-6\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"bg-gradient-to-br from-blue-500 to-purple-600 p-4 rounded-2xl\">\r\n            <Brain ref={brainRef} className=\"w-8 h-8 text-white\" />\r\n          </div>\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-gray-800\">\r\n              🧠 Clasifica y Agrupa\r\n            </h1>\r\n            <p className=\"text-gray-600\">\r\n              Conecta los elementos con sus conjuntos neuronales\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-6\">\r\n          <div className=\"flex items-center gap-2 bg-yellow-50 px-4 py-2 rounded-xl border border-yellow-200\">\r\n            <Trophy className=\"w-5 h-5 text-yellow-600\" />\r\n            <span ref={scoreRef} className=\"font-bold text-yellow-800\">{score} pts</span>\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-2 bg-blue-50 px-4 py-2 rounded-xl border border-blue-200\">\r\n            <Target className=\"w-5 h-5 text-blue-600\" />\r\n            <span className=\"font-bold text-blue-800\">\r\n              {completedSets}/{totalSets} conjuntos\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Barra de progreso neuronal */}\r\n      <div className=\"mt-6\">\r\n        <div className=\"flex justify-between items-center mb-2\">\r\n          <span className=\"text-sm font-semibold text-gray-600\">\r\n            Progreso de Conexiones Sinápticas\r\n          </span>\r\n          <span className=\"text-sm font-bold text-blue-600\">\r\n            {Math.round(progress)}%\r\n          </span>\r\n        </div>\r\n        <div className=\"w-full bg-gray-200 rounded-full h-3 overflow-hidden\">\r\n          <div \r\n            ref={progressBarRef}\r\n            className=\"h-full bg-gradient-to-r from-blue-500 to-green-500 rounded-full\"\r\n            style={{ width: '0%' }}\r\n          >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AACA;AACA;;;;;AAQe,SAAS,WAAY,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAmB;IACtF,MAAM,WAAW,AAAC,gBAAgB,YAAa;IAC/C,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IACzC,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAiB;IACvC,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAC9C,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAExC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,UAAU,OAAO,IAAI,CAAC,SAAS,OAAO,EAAE;QAE7C,kCAAkC;QAClC,6IAAA,CAAA,OAAI,CAAC,MAAM,CAAC,UAAU,OAAO,EAC3B;YACE,GAAG,CAAC;YACJ,SAAS;QACX,GACA;YACE,GAAG;YACH,SAAS;YACT,UAAU;YACV,MAAM;QACR;QAGF,qDAAqD;QACrD,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,SAAS,OAAO,EAAE;YACxB,OAAO;YACP,UAAU;YACV,QAAQ,CAAC;YACT,MAAM;YACN,MAAM;QACR;IACF,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,oCAAoC;QACpC,IAAI,eAAe,OAAO,EAAE;YAC1B,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,eAAe,OAAO,EAAE;gBAC9B,OAAO,GAAG,SAAS,CAAC,CAAC;gBACrB,UAAU;gBACV,MAAM;YACR;QACF;IACF,GAAG;QAAC;KAAS;IAEb,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,oCAAoC;QACpC,IAAI,SAAS,OAAO,EAAE;YACpB,6IAAA,CAAA,OAAI,CAAC,MAAM,CAAC,SAAS,OAAO,EAC1B;gBACE,OAAO;gBACP,OAAO;YACT,GACA;gBACE,OAAO;gBACP,OAAO;gBACP,UAAU;gBACV,MAAM;YACR;QAEJ;IACF,GAAG;QAAC;KAAM;IAEV,qBACE,8OAAC;QAAI,KAAK;QAAW,WAAU;;0BAC7B,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,oMAAA,CAAA,QAAK;oCAAC,KAAK;oCAAU,WAAU;;;;;;;;;;;0CAElC,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;kDAAmC;;;;;;kDAGjD,8OAAC;wCAAE,WAAU;kDAAgB;;;;;;;;;;;;;;;;;;kCAMjC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,sMAAA,CAAA,SAAM;wCAAC,WAAU;;;;;;kDAClB,8OAAC;wCAAK,KAAK;wCAAU,WAAU;;4CAA6B;4CAAM;;;;;;;;;;;;;0CAGpE,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,sMAAA,CAAA,SAAM;wCAAC,WAAU;;;;;;kDAClB,8OAAC;wCAAK,WAAU;;4CACb;4CAAc;4CAAE;4CAAU;;;;;;;;;;;;;;;;;;;;;;;;;0BAOnC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;0CAAsC;;;;;;0CAGtD,8OAAC;gCAAK,WAAU;;oCACb,KAAK,KAAK,CAAC;oCAAU;;;;;;;;;;;;;kCAG1B,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,KAAK;4BACL,WAAU;4BACV,OAAO;gCAAE,OAAO;4BAAK;;;;;;;;;;;;;;;;;;;;;;;AAOjC","debugId":null}},
    {"offset": {"line": 552, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/hooks/use-toast.ts/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const toast = registerClientReference(\n    function() { throw new Error(\"Attempted to call toast() from the server but toast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/hooks/use-toast.ts <module evaluation>\",\n    \"toast\",\n);\nexport const useToast = registerClientReference(\n    function() { throw new Error(\"Attempted to call useToast() from the server but useToast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/hooks/use-toast.ts <module evaluation>\",\n    \"useToast\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,oDACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,oDACA","debugId":null}},
    {"offset": {"line": 570, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/hooks/use-toast.ts/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const toast = registerClientReference(\n    function() { throw new Error(\"Attempted to call toast() from the server but toast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/hooks/use-toast.ts\",\n    \"toast\",\n);\nexport const useToast = registerClientReference(\n    function() { throw new Error(\"Attempted to call useToast() from the server but useToast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/hooks/use-toast.ts\",\n    \"useToast\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,gCACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,gCACA","debugId":null}},
    {"offset": {"line": 588, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 598, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/app/modules/conjuntos/clasificaAgrupa/page.tsx"],"sourcesContent":["\r\nimport { useState, useRef } from 'react';\r\nimport { DraggableItem } from '@/components/atoms/DraggableItem';\r\nimport DropZone from '@/components/atoms/DropZone';\r\nimport GameHeader from '@/components/molecules/GameHeader';\r\nimport { Brain, Target, Zap } from 'lucide-react';\r\nimport { useToast } from \"@/hooks/use-toast\";\r\n\r\ninterface GameItem {\r\n  id: string;\r\n  name: string;\r\n  category: string;\r\n  icon: string;\r\n  color: string;\r\n}\r\n\r\ninterface GameSet {\r\n  id: string;\r\n  name: string;\r\n  color: string;\r\n  description: string;\r\n  icon: any;\r\n}\r\n\r\nconst Index = () => {\r\n  const { toast } = useToast();\r\n  \r\n  // Items relacionados con neurociencia cognitiva\r\n  const gameItems: GameItem[] = [\r\n    { id: '1', name: 'Neurona', category: 'células', icon: '🧠', color: 'bg-blue-100' },\r\n    { id: '2', name: 'Sinapsis', category: 'células', icon: '⚡', color: 'bg-blue-100' },\r\n    { id: '3', name: 'Dendrita', category: 'células', icon: '🌿', color: 'bg-blue-100' },\r\n    { id: '4', name: 'Memoria', category: 'procesos', icon: '💭', color: 'bg-green-100' },\r\n    { id: '5', name: 'Atención', category: 'procesos', icon: '👁️', color: 'bg-green-100' },\r\n    { id: '6', name: 'Aprendizaje', category: 'procesos', icon: '📚', color: 'bg-green-100' },\r\n    { id: '7', name: 'Dopamina', category: 'neurotransmisores', icon: '🧪', color: 'bg-purple-100' },\r\n    { id: '8', name: 'Serotonina', category: 'neurotransmisores', icon: '💊', color: 'bg-purple-100' },\r\n    { id: '9', name: 'Acetilcolina', category: 'neurotransmisores', icon: '⚗️', color: 'bg-purple-100' },\r\n  ];\r\n\r\n  const gameSets: GameSet[] = [\r\n    { \r\n      id: 'células', \r\n      name: 'Células Nerviosas', \r\n      color: 'border-blue-400 bg-blue-50', \r\n      description: 'Componentes básicos del sistema nervioso',\r\n      icon: Brain\r\n    },\r\n    { \r\n      id: 'procesos', \r\n      name: 'Procesos Cognitivos', \r\n      color: 'border-green-400 bg-green-50', \r\n      description: 'Funciones mentales superiores',\r\n      icon: Target\r\n    },\r\n    { \r\n      id: 'neurotransmisores', \r\n      name: 'Neurotransmisores', \r\n      color: 'border-purple-400 bg-purple-50', \r\n      description: 'Mensajeros químicos del cerebro',\r\n      icon: Zap\r\n    },\r\n  ];\r\n\r\n  const [items, setItems] = useState(gameItems);\r\n  const [score, setScore] = useState(0);\r\n  const [completedSets, setCompletedSets] = useState<string[]>([]);\r\n  const dragItem = useRef<GameItem | null>(null);\r\n\r\n  const handleDragStart = (item: GameItem) => {\r\n    dragItem.current = item;\r\n    console.log('Iniciando arrastre:', item.name);\r\n  };\r\n\r\n  const handleDrop = (setId: string) => {\r\n    if (!dragItem.current) return;\r\n\r\n    const item = dragItem.current;\r\n    console.log('Soltando:', item.name, 'en conjunto:', setId);\r\n\r\n    if (item.category === setId) {\r\n      // Clasificación correcta\r\n      setItems(prev => prev.filter(i => i.id !== item.id));\r\n      setScore(prev => prev + 10);\r\n      \r\n      toast({\r\n        title: \"¡Excelente conexión neural! 🧠\",\r\n        description: `${item.name} pertenece a ${gameSets.find(s => s.id === setId)?.name}`,\r\n        duration: 2000,\r\n      });\r\n\r\n      // Verificar si el conjunto está completo\r\n      const remainingItemsInSet = items.filter(i => i.category === setId && i.id !== item.id);\r\n      if (remainingItemsInSet.length === 0) {\r\n        setCompletedSets(prev => [...prev, setId]);\r\n        toast({\r\n          title: \"¡Conjunto completado! 🎉\",\r\n          description: \"Has activado todas las conexiones sinápticas\",\r\n          duration: 3000,\r\n        });\r\n      }\r\n    } else {\r\n      // Clasificación incorrea\r\n      toast({\r\n        title: \"Conexión sináptica interrumpida\",\r\n        description: \"Intenta con otro conjunto neural\",\r\n        duration: 2000,\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n\r\n    dragItem.current = null;\r\n  };\r\n\r\n  const isGameComplete = completedSets.length === gameSets.length;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 p-4\">\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        <GameHeader score={score} completedSets={completedSets.length} totalSets={gameSets.length} />\r\n        \r\n        {isGameComplete ? (\r\n          <div className=\"text-center py-16 gentle-float\">\r\n            <div className=\"bg-white rounded-3xl p-8 shadow-2xl border border-green-200\">\r\n              <div className=\"text-6xl mb-4\">🧠✨</div>\r\n              <h2 className=\"text-4xl font-bold text-green-600 mb-4\">¡Red Neural Completada!</h2>\r\n              <p className=\"text-xl text-gray-600 mb-6\">\r\n                Has establecido todas las conexiones sinápticas correctamente\r\n              </p>\r\n              <div className=\"text-3xl font-bold text-blue-600\">\r\n                Puntuación Final: {score} puntos\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n            {/* Área de elementos arrastrables */}\r\n            <div className=\"space-y-6\">\r\n              <div className=\"bg-white rounded-2xl p-6 shadow-lg border border-gray-200\">\r\n                <h2 className=\"text-2xl font-bold text-gray-800 mb-4 flex items-center gap-2\">\r\n                  <Brain className=\"text-blue-500\" />\r\n                  Elementos Neurocientíficos\r\n                </h2>\r\n                <p className=\"text-gray-600 mb-6\">\r\n                  Arrastra cada elemento al conjunto correspondiente para activar las conexiones sinápticas\r\n                </p>\r\n                <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-4\">\r\n                  {items.map((item) => (\r\n                    <DraggableItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      onDragStart={handleDragStart}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Área de conjuntos */}\r\n            <div className=\"space-y-4\">\r\n              <h2 className=\"text-2xl font-bold text-gray-800 flex items-center gap-2\">\r\n                <Target className=\"text-green-500\" />\r\n                Conjuntos Neuronales\r\n              </h2>\r\n              {gameSets.map((set) => (\r\n                <DropZone\r\n                  key={set.id}\r\n                  set={set}\r\n                  onDrop={handleDrop}\r\n                  isCompleted={completedSets.includes(set.id)}\r\n                  itemCount={items.filter(item => item.category === set.id).length}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;"],"names":[],"mappings":"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","debugId":null}}]
}