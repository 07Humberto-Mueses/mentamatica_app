{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/components/molecules/GameHeader.tsx"],"sourcesContent":["\"use client\";\r\nimport { Brain, Trophy, Target } from 'lucide-react';\r\nimport { useRef, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\n\r\ninterface GameHeaderProps {\r\n  score: number;\r\n  completedSets: number;\r\n  totalSets: number;\r\n  level?: number;\r\n  totalScore?: number;\r\n}\r\n\r\nexport default function GameHeader ({ score, completedSets, totalSets, level = 1, totalScore = 0 }: GameHeaderProps) {\r\n  const progress = (completedSets / totalSets) * 100;\r\n  const headerRef = useRef<HTMLDivElement>(null);\r\n  const brainRef = useRef<SVGSVGElement>(null);\r\n  const progressBarRef = useRef<HTMLDivElement>(null);\r\n  const scoreRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!headerRef.current || !brainRef.current) return;\r\n\r\n    // Animación de entrada del header\r\n    gsap.fromTo(headerRef.current, \r\n      { \r\n        y: -100, \r\n        opacity: 0 \r\n      },\r\n      { \r\n        y: 0, \r\n        opacity: 1, \r\n        duration: 1, \r\n        ease: \"bounce.out\" \r\n      }\r\n    );\r\n\r\n    // Animación de pulso neural continuo para el cerebro\r\n    gsap.to(brainRef.current, {\r\n      scale: 1.1,\r\n      duration: 1.5,\r\n      repeat: -1,\r\n      yoyo: true,\r\n      ease: \"power2.inOut\"\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Animación de la barra de progreso\r\n    if (progressBarRef.current) {\r\n      gsap.to(progressBarRef.current, {\r\n        width: `${progress}%`,\r\n        duration: 1,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n  }, [progress]);\r\n\r\n  useEffect(() => {\r\n    // Animación del score cuando cambia\r\n    if (scoreRef.current) {\r\n      gsap.fromTo(scoreRef.current, \r\n        { \r\n          scale: 1.3, \r\n          color: \"#f59e0b\" \r\n        },\r\n        { \r\n          scale: 1, \r\n          color: \"#92400e\",\r\n          duration: 0.5, \r\n          ease: \"elastic.out(1, 0.5)\" \r\n        }\r\n      );\r\n    }\r\n  }, [score]);\r\n\r\n  return (\r\n    <div ref={headerRef} className=\"bg-white rounded-3xl p-6 mb-8 shadow-xl border border-gray-200\">\r\n      <div className=\"flex flex-col md:flex-row items-center justify-between gap-6\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"bg-gradient-to-br from-blue-500 to-purple-600 p-4 rounded-2xl\">\r\n            <Brain ref={brainRef} className=\"w-8 h-8 text-white\" />\r\n          </div>\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-gray-800\">\r\n              🧠 Clasifica y Agrupa - Nivel {level}\r\n            </h1>\r\n            <p className=\"text-gray-600\">\r\n              Conecta los elementos con sus conjuntos neuronales\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-6\">\r\n          <div className=\"flex items-center gap-2 bg-yellow-50 px-4 py-2 rounded-xl border border-yellow-200\">\r\n            <Trophy className=\"w-5 h-5 text-yellow-600\" />\r\n            <span ref={scoreRef} className=\"font-bold text-yellow-800\">{score} pts</span>\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-2 bg-green-50 px-4 py-2 rounded-xl border border-green-200\">\r\n            <Trophy className=\"w-5 h-5 text-green-600\" />\r\n            <span className=\"font-bold text-green-800\">Total: {totalScore} pts</span>\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-2 bg-blue-50 px-4 py-2 rounded-xl border border-blue-200\">\r\n            <Target className=\"w-5 h-5 text-blue-600\" />\r\n            <span className=\"font-bold text-blue-800\">\r\n              {completedSets}/{totalSets} conjuntos\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Barra de progreso neuronal */}\r\n      <div className=\"mt-6\">\r\n        <div className=\"flex justify-between items-center mb-2\">\r\n          <span className=\"text-sm font-semibold text-gray-600\">\r\n            Progreso de Conexiones Sinápticas - Nivel {level}\r\n          </span>\r\n          <span className=\"text-sm font-bold text-blue-600\">\r\n            {Math.round(progress)}%\r\n          </span>\r\n        </div>\r\n        <div className=\"w-full bg-gray-200 rounded-full h-3 overflow-hidden\">\r\n          <div \r\n            ref={progressBarRef}\r\n            className=\"h-full bg-gradient-to-r from-blue-500 to-green-500 rounded-full\"\r\n            style={{ width: '0%' }}\r\n          >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/components/molecules/ArrastrarItem.tsx"],"sourcesContent":["\"use client\"\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\n\r\ninterface GameItem {\r\n  id: string;\r\n  name: string;\r\n  category: string;\r\n  icon: string;\r\n  color: string;\r\n}\r\n\r\ninterface DraggableItemProps {\r\n  item: GameItem;\r\n  onDragStart: (item: GameItem) => void;\r\n}\r\n\r\nexport function ArrastrarItem ({ item, onDragStart }: DraggableItemProps){\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const itemRef = useRef<HTMLDivElement>(null);\r\n  const iconRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!itemRef.current || !iconRef.current) return;\r\n\r\n    // Animación de entrada con GSAP\r\n    gsap.fromTo(itemRef.current, \r\n      { \r\n        scale: 0, \r\n        opacity: 0, \r\n        rotation: -180 \r\n      },\r\n      { \r\n        scale: 1, \r\n        opacity: 1, \r\n        rotation: 0, \r\n        duration: 0.8, \r\n        ease: \"back.out(1.7)\",\r\n        delay: Math.random() * 0.5\r\n      }\r\n    );\r\n\r\n    // Animación de pulso neural para el ícono\r\n    gsap.to(iconRef.current, {\r\n      scale: 1.1,\r\n      duration: 2,\r\n      repeat: -1,\r\n      yoyo: true,\r\n      ease: \"power2.inOut\"\r\n    });\r\n\r\n    // Animación de flotación suave\r\n    gsap.to(itemRef.current, {\r\n      y: -10,\r\n      duration: 3,\r\n      repeat: -1,\r\n      yoyo: true,\r\n      ease: \"power1.inOut\",\r\n      delay: Math.random() * 2\r\n    });\r\n  }, []);\r\n\r\n  const handleDragStart = (e: React.DragEvent) => {\r\n    onDragStart(item);\r\n    setIsDragging(true);\r\n    e.dataTransfer.effectAllowed = 'move';\r\n    \r\n    // Animación de arrastre con GSAP\r\n    if (itemRef.current) {\r\n      gsap.to(itemRef.current, {\r\n        scale: 1.2,\r\n        rotation: 15,\r\n        opacity: 0.8,\r\n        duration: 0.3,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n    \r\n    console.log('DragStart en DraggableItem:', item.name);\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    setIsDragging(false);\r\n    \r\n    // Restaurar estado normal con GSAP\r\n    if (itemRef.current) {\r\n      gsap.to(itemRef.current, {\r\n        scale: 1,\r\n        rotation: 0,\r\n        opacity: 1,\r\n        duration: 0.4,\r\n        ease: \"elastic.out(1, 0.5)\"\r\n      });\r\n    }\r\n    \r\n    console.log('DragEnd en DraggableItem:', item.name);\r\n  };\r\n\r\n  const handleMouseEnter = () => {\r\n    if (!isDragging && itemRef.current) {\r\n      gsap.to(itemRef.current, {\r\n        scale: 1.05,\r\n        duration: 0.3,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (!isDragging && itemRef.current) {\r\n      gsap.to(itemRef.current, {\r\n        scale: 1,\r\n        duration: 0.3,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={itemRef}\r\n      draggable\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      className={`\r\n        ${item.color} \r\n        p-4 rounded-2xl border-2 border-gray-200 shadow-md cursor-move \r\n        hover:shadow-lg hover:border-blue-300\r\n        flex flex-col items-center gap-2\r\n        select-none\r\n      `}\r\n    >\r\n      <div ref={iconRef} className=\"text-3xl\">\r\n        {item.icon}\r\n      </div>\r\n      <span className=\"text-sm font-semibold text-gray-700 text-center\">\r\n        {item.name}\r\n      </span>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAiBO,SAAS,cAAe,EAAE,IAAI,EAAE,WAAW,EAAsB;IACtE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IACvC,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,QAAQ,OAAO,IAAI,CAAC,QAAQ,OAAO,EAAE;QAE1C,gCAAgC;QAChC,6IAAA,CAAA,OAAI,CAAC,MAAM,CAAC,QAAQ,OAAO,EACzB;YACE,OAAO;YACP,SAAS;YACT,UAAU,CAAC;QACb,GACA;YACE,OAAO;YACP,SAAS;YACT,UAAU;YACV,UAAU;YACV,MAAM;YACN,OAAO,KAAK,MAAM,KAAK;QACzB;QAGF,0CAA0C;QAC1C,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;YACvB,OAAO;YACP,UAAU;YACV,QAAQ,CAAC;YACT,MAAM;YACN,MAAM;QACR;QAEA,+BAA+B;QAC/B,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;YACvB,GAAG,CAAC;YACJ,UAAU;YACV,QAAQ,CAAC;YACT,MAAM;YACN,MAAM;YACN,OAAO,KAAK,MAAM,KAAK;QACzB;IACF,GAAG,EAAE;IAEL,MAAM,kBAAkB,CAAC;QACvB,YAAY;QACZ,cAAc;QACd,EAAE,YAAY,CAAC,aAAa,GAAG;QAE/B,iCAAiC;QACjC,IAAI,QAAQ,OAAO,EAAE;YACnB,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;gBACvB,OAAO;gBACP,UAAU;gBACV,SAAS;gBACT,UAAU;gBACV,MAAM;YACR;QACF;QAEA,QAAQ,GAAG,CAAC,+BAA+B,KAAK,IAAI;IACtD;IAEA,MAAM,gBAAgB;QACpB,cAAc;QAEd,mCAAmC;QACnC,IAAI,QAAQ,OAAO,EAAE;YACnB,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;gBACvB,OAAO;gBACP,UAAU;gBACV,SAAS;gBACT,UAAU;gBACV,MAAM;YACR;QACF;QAEA,QAAQ,GAAG,CAAC,6BAA6B,KAAK,IAAI;IACpD;IAEA,MAAM,mBAAmB;QACvB,IAAI,CAAC,cAAc,QAAQ,OAAO,EAAE;YAClC,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;gBACvB,OAAO;gBACP,UAAU;gBACV,MAAM;YACR;QACF;IACF;IAEA,MAAM,mBAAmB;QACvB,IAAI,CAAC,cAAc,QAAQ,OAAO,EAAE;YAClC,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;gBACvB,OAAO;gBACP,UAAU;gBACV,MAAM;YACR;QACF;IACF;IAEA,qBACE,8OAAC;QACC,KAAK;QACL,SAAS;QACT,aAAa;QACb,WAAW;QACX,cAAc;QACd,cAAc;QACd,WAAW,CAAC;QACV,EAAE,KAAK,KAAK,CAAC;;;;;MAKf,CAAC;;0BAED,8OAAC;gBAAI,KAAK;gBAAS,WAAU;0BAC1B,KAAK,IAAI;;;;;;0BAEZ,8OAAC;gBAAK,WAAU;0BACb,KAAK,IAAI;;;;;;;;;;;;AAIlB","debugId":null}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/components/molecules/DropZone.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { CheckCircle } from 'lucide-react';\r\nimport { gsap } from 'gsap';\r\n\r\ninterface GameSet {\r\n  id: string;\r\n  name: string;\r\n  color: string;\r\n  description: string;\r\n  icon: any;\r\n}\r\n\r\ninterface DropZoneProps {\r\n  set: GameSet;\r\n  onDrop: (setId: string) => void;\r\n  isCompleted: boolean;\r\n  itemCount: number;\r\n}\r\n\r\nexport default function DropZone ({ set, onDrop, isCompleted, itemCount }: DropZoneProps) {\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const zoneRef = useRef<HTMLDivElement>(null);\r\n  const checkRef = useRef<SVGSVGElement>(null);\r\n  const synapticRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!zoneRef.current) return;\r\n\r\n    // Animación de entrada\r\n    gsap.fromTo(zoneRef.current, \r\n      { \r\n        scale: 0.8, \r\n        opacity: 0,\r\n        rotateY: 90\r\n      },\r\n      { \r\n        scale: 1, \r\n        opacity: 1, \r\n        rotateY: 0,\r\n        duration: 0.6, \r\n        ease: \"power2.out\",\r\n        delay: 0.2\r\n      }\r\n    );\r\n\r\n    // Animación de flujo sináptico continuo\r\n    if (synapticRef.current) {\r\n      gsap.to(synapticRef.current, {\r\n        x: \"100%\",\r\n        duration: 2,\r\n        repeat: -1,\r\n        ease: \"power2.inOut\"\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isCompleted && checkRef.current) {\r\n      // Animación de éxito\r\n      gsap.fromTo(checkRef.current, \r\n        { \r\n          scale: 0, \r\n          rotation: -180,\r\n          opacity: 0 \r\n        },\r\n        { \r\n          scale: 1, \r\n          rotation: 0,\r\n          opacity: 1,\r\n          duration: 0.8, \r\n          ease: \"elastic.out(1, 0.5)\"\r\n        }\r\n      );\r\n\r\n      // Efecto de celebración en la zona completa\r\n      if (zoneRef.current) {\r\n        gsap.to(zoneRef.current, {\r\n          boxShadow: \"0 0 30px rgba(34, 197, 94, 0.5)\",\r\n          duration: 0.5,\r\n          yoyo: true,\r\n          repeat: 3\r\n        });\r\n      }\r\n    }\r\n  }, [isCompleted]);\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragOver(true);\r\n    \r\n    if (zoneRef.current) {\r\n      gsap.to(zoneRef.current, {\r\n        scale: 1.02,\r\n        borderColor: \"#3b82f6\",\r\n        duration: 0.3,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDragLeave = () => {\r\n    setIsDragOver(false);\r\n    \r\n    if (zoneRef.current) {\r\n      gsap.to(zoneRef.current, {\r\n        scale: 1,\r\n        duration: 0.3,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragOver(false);\r\n    onDrop(set.id);\r\n    \r\n    // Animación de recepción exitosa\r\n    if (zoneRef.current) {\r\n      gsap.to(zoneRef.current, {\r\n        scale: 1.05,\r\n        duration: 0.2,\r\n        yoyo: true,\r\n        repeat: 1,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n    \r\n    console.log('Drop en DropZone:', set.id);\r\n  };\r\n\r\n  const IconComponent = set.icon;\r\n\r\n  return (\r\n    <div\r\n      ref={zoneRef}\r\n      onDragOver={handleDragOver}\r\n      onDragLeave={handleDragLeave}\r\n      onDrop={handleDrop}\r\n      className={`\r\n        ${set.color}\r\n        ${isCompleted ? 'border-green-400 bg-green-50' : ''}\r\n        p-6 rounded-2xl border-2 min-h-[120px]\r\n        transition-colors duration-300\r\n        relative overflow-hidden\r\n      `}\r\n    >\r\n      {/* Efecto de fondo neuronal */}\r\n      <div className=\"absolute inset-0 opacity-10\">\r\n        <div ref={synapticRef} className=\"h-1 bg-current w-full\"></div>\r\n      </div>\r\n      \r\n      <div className=\"relative z-10\">\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <IconComponent className=\"w-6 h-6 text-gray-600\" />\r\n            <h3 className=\"text-lg font-bold text-gray-800\">\r\n              {set.name}\r\n            </h3>\r\n          </div>\r\n          \r\n          {isCompleted && (\r\n            <CheckCircle ref={checkRef} className=\"w-6 h-6 text-green-500\" />\r\n          )}\r\n          \r\n          <div className=\"bg-white rounded-full px-3 py-1 text-sm font-semibold text-gray-600\">\r\n            {itemCount} elementos\r\n          </div>\r\n        </div>\r\n        \r\n        <p className=\"text-sm text-gray-600 mb-3\">\r\n          {set.description}\r\n        </p>\r\n        \r\n        {isDragOver && (\r\n          <div className=\"text-center text-blue-600 font-semibold\">\r\n            ⚡ Estableciendo conexión sináptica...\r\n          </div>\r\n        )}\r\n        \r\n        {isCompleted && (\r\n          <div className=\"text-center text-green-600 font-semibold\">\r\n            ✅ Red neural activada\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 679, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/public/data/conjuntos/gameLevels.ts"],"sourcesContent":["import { Brain, Target, Zap, Heart, Cpu, Microscope } from 'lucide-react';\r\n\r\nexport interface GameItem {\r\n  id: string;\r\n  name: string;\r\n  category: string;\r\n  icon: string;\r\n  color: string;\r\n}\r\n\r\nexport interface GameSet {\r\n  id: string;\r\n  name: string;\r\n  color: string;\r\n  description: string;\r\n  icon: any;\r\n}\r\n\r\nexport interface GameLevel {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  items: GameItem[];\r\n  sets: GameSet[];\r\n}\r\n\r\nexport const gameLevels: GameLevel[] = [\r\n  {\r\n    id: 1,\r\n    title: \"Neurociencia Básica\",\r\n    description: \"Conecta los elementos fundamentales del sistema nervioso\",\r\n    items: [\r\n      { id: '1', name: 'Neurona', category: 'células', icon: '🧠', color: 'bg-blue-100' },\r\n      { id: '2', name: 'Sinapsis', category: 'células', icon: '⚡', color: 'bg-blue-100' },\r\n      { id: '3', name: 'Dendrita', category: 'células', icon: '🌿', color: 'bg-blue-100' },\r\n      { id: '4', name: 'Memoria', category: 'procesos', icon: '💭', color: 'bg-green-100' },\r\n      { id: '5', name: 'Atención', category: 'procesos', icon: '👁️', color: 'bg-green-100' },\r\n      { id: '6', name: 'Aprendizaje', category: 'procesos', icon: '📚', color: 'bg-green-100' },\r\n      { id: '7', name: 'Dopamina', category: 'neurotransmisores', icon: '🧪', color: 'bg-purple-100' },\r\n      { id: '8', name: 'Serotonina', category: 'neurotransmisores', icon: '💊', color: 'bg-purple-100' },\r\n      { id: '9', name: 'Acetilcolina', category: 'neurotransmisores', icon: '⚗️', color: 'bg-purple-100' },\r\n    ],\r\n    sets: [\r\n      { \r\n        id: 'células', \r\n        name: 'Células Nerviosas', \r\n        color: 'border-blue-400 bg-blue-50', \r\n        description: 'Componentes básicos del sistema nervioso',\r\n        icon: Brain\r\n      },\r\n      { \r\n        id: 'procesos', \r\n        name: 'Procesos Cognitivos', \r\n        color: 'border-green-400 bg-green-50', \r\n        description: 'Funciones mentales superiores',\r\n        icon: Target\r\n      },\r\n      { \r\n        id: 'neurotransmisores', \r\n        name: 'Neurotransmisores', \r\n        color: 'border-purple-400 bg-purple-50', \r\n        description: 'Mensajeros químicos del cerebro',\r\n        icon: Zap\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Anatomía del Sistema Nervioso\",\r\n    description: \"Explora las estructuras y funciones del cerebro\",\r\n    items: [\r\n      { id: '10', name: 'Corteza', category: 'estructuras', icon: '🧩', color: 'bg-red-100' },\r\n      { id: '11', name: 'Hipocampo', category: 'estructuras', icon: '🏛️', color: 'bg-red-100' },\r\n      { id: '12', name: 'Amígdala', category: 'estructuras', icon: '🔻', color: 'bg-red-100' },\r\n      { id: '13', name: 'Miedo', category: 'emociones', icon: '😨', color: 'bg-orange-100' },\r\n      { id: '14', name: 'Alegría', category: 'emociones', icon: '😊', color: 'bg-orange-100' },\r\n      { id: '15', name: 'Ira', category: 'emociones', icon: '😠', color: 'bg-orange-100' },\r\n      { id: '16', name: 'Visión', category: 'sentidos', icon: '👀', color: 'bg-yellow-100' },\r\n      { id: '17', name: 'Audición', category: 'sentidos', icon: '👂', color: 'bg-yellow-100' },\r\n      { id: '18', name: 'Tacto', category: 'sentidos', icon: '✋', color: 'bg-yellow-100' },\r\n    ],\r\n    sets: [\r\n      { \r\n        id: 'estructuras', \r\n        name: 'Estructuras Cerebrales', \r\n        color: 'border-red-400 bg-red-50', \r\n        description: 'Partes anatómicas del cerebro',\r\n        icon: Microscope\r\n      },\r\n      { \r\n        id: 'emociones', \r\n        name: 'Emociones', \r\n        color: 'border-orange-400 bg-orange-50', \r\n        description: 'Respuestas emocionales básicas',\r\n        icon: Heart\r\n      },\r\n      { \r\n        id: 'sentidos', \r\n        name: 'Sistemas Sensoriales', \r\n        color: 'border-yellow-400 bg-yellow-50', \r\n        description: 'Procesamiento de información sensorial',\r\n        icon: Cpu\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Neuroplasticidad y Desarrollo\",\r\n    description: \"Descubre cómo cambia y se adapta el cerebro\",\r\n    items: [\r\n      { id: '19', name: 'Sinaptogénesis', category: 'desarrollo', icon: '🌱', color: 'bg-emerald-100' },\r\n      { id: '20', name: 'Mielinización', category: 'desarrollo', icon: '🛡️', color: 'bg-emerald-100' },\r\n      { id: '21', name: 'Poda Sináptica', category: 'desarrollo', icon: '✂️', color: 'bg-emerald-100' },\r\n      { id: '22', name: 'Ejercicio', category: 'factores', icon: '🏃', color: 'bg-teal-100' },\r\n      { id: '23', name: 'Sueño', category: 'factores', icon: '😴', color: 'bg-teal-100' },\r\n      { id: '24', name: 'Nutrición', category: 'factores', icon: '🥗', color: 'bg-teal-100' },\r\n      { id: '25', name: 'LTP', category: 'mecanismos', icon: '⬆️', color: 'bg-cyan-100' },\r\n      { id: '26', name: 'LTD', category: 'mecanismos', icon: '⬇️', color: 'bg-cyan-100' },\r\n      { id: '27', name: 'Neurogénesis', category: 'mecanismos', icon: '🆕', color: 'bg-cyan-100' },\r\n    ],\r\n    sets: [\r\n      { \r\n        id: 'desarrollo', \r\n        name: 'Desarrollo Neural', \r\n        color: 'border-emerald-400 bg-emerald-50', \r\n        description: 'Procesos de crecimiento cerebral',\r\n        icon: Brain\r\n      },\r\n      { \r\n        id: 'factores', \r\n        name: 'Factores Ambientales', \r\n        color: 'border-teal-400 bg-teal-50', \r\n        description: 'Influencias externas en el cerebro',\r\n        icon: Target\r\n      },\r\n      { \r\n        id: 'mecanismos', \r\n        name: 'Mecanismos de Plasticidad', \r\n        color: 'border-cyan-400 bg-cyan-50', \r\n        description: 'Cambios sinápticos y celulares',\r\n        icon: Zap\r\n      },\r\n    ]\r\n  }\r\n];\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA0BO,MAAM,aAA0B;IACrC;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,OAAO;YACL;gBAAE,IAAI;gBAAK,MAAM;gBAAW,UAAU;gBAAW,MAAM;gBAAM,OAAO;YAAc;YAClF;gBAAE,IAAI;gBAAK,MAAM;gBAAY,UAAU;gBAAW,MAAM;gBAAK,OAAO;YAAc;YAClF;gBAAE,IAAI;gBAAK,MAAM;gBAAY,UAAU;gBAAW,MAAM;gBAAM,OAAO;YAAc;YACnF;gBAAE,IAAI;gBAAK,MAAM;gBAAW,UAAU;gBAAY,MAAM;gBAAM,OAAO;YAAe;YACpF;gBAAE,IAAI;gBAAK,MAAM;gBAAY,UAAU;gBAAY,MAAM;gBAAO,OAAO;YAAe;YACtF;gBAAE,IAAI;gBAAK,MAAM;gBAAe,UAAU;gBAAY,MAAM;gBAAM,OAAO;YAAe;YACxF;gBAAE,IAAI;gBAAK,MAAM;gBAAY,UAAU;gBAAqB,MAAM;gBAAM,OAAO;YAAgB;YAC/F;gBAAE,IAAI;gBAAK,MAAM;gBAAc,UAAU;gBAAqB,MAAM;gBAAM,OAAO;YAAgB;YACjG;gBAAE,IAAI;gBAAK,MAAM;gBAAgB,UAAU;gBAAqB,MAAM;gBAAM,OAAO;YAAgB;SACpG;QACD,MAAM;YACJ;gBACE,IAAI;gBACJ,MAAM;gBACN,OAAO;gBACP,aAAa;gBACb,MAAM,oMAAA,CAAA,QAAK;YACb;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,OAAO;gBACP,aAAa;gBACb,MAAM,sMAAA,CAAA,SAAM;YACd;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,OAAO;gBACP,aAAa;gBACb,MAAM,gMAAA,CAAA,MAAG;YACX;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,OAAO;YACL;gBAAE,IAAI;gBAAM,MAAM;gBAAW,UAAU;gBAAe,MAAM;gBAAM,OAAO;YAAa;YACtF;gBAAE,IAAI;gBAAM,MAAM;gBAAa,UAAU;gBAAe,MAAM;gBAAO,OAAO;YAAa;YACzF;gBAAE,IAAI;gBAAM,MAAM;gBAAY,UAAU;gBAAe,MAAM;gBAAM,OAAO;YAAa;YACvF;gBAAE,IAAI;gBAAM,MAAM;gBAAS,UAAU;gBAAa,MAAM;gBAAM,OAAO;YAAgB;YACrF;gBAAE,IAAI;gBAAM,MAAM;gBAAW,UAAU;gBAAa,MAAM;gBAAM,OAAO;YAAgB;YACvF;gBAAE,IAAI;gBAAM,MAAM;gBAAO,UAAU;gBAAa,MAAM;gBAAM,OAAO;YAAgB;YACnF;gBAAE,IAAI;gBAAM,MAAM;gBAAU,UAAU;gBAAY,MAAM;gBAAM,OAAO;YAAgB;YACrF;gBAAE,IAAI;gBAAM,MAAM;gBAAY,UAAU;gBAAY,MAAM;gBAAM,OAAO;YAAgB;YACvF;gBAAE,IAAI;gBAAM,MAAM;gBAAS,UAAU;gBAAY,MAAM;gBAAK,OAAO;YAAgB;SACpF;QACD,MAAM;YACJ;gBACE,IAAI;gBACJ,MAAM;gBACN,OAAO;gBACP,aAAa;gBACb,MAAM,8MAAA,CAAA,aAAU;YAClB;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,OAAO;gBACP,aAAa;gBACb,MAAM,oMAAA,CAAA,QAAK;YACb;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,OAAO;gBACP,aAAa;gBACb,MAAM,gMAAA,CAAA,MAAG;YACX;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,OAAO;YACL;gBAAE,IAAI;gBAAM,MAAM;gBAAkB,UAAU;gBAAc,MAAM;gBAAM,OAAO;YAAiB;YAChG;gBAAE,IAAI;gBAAM,MAAM;gBAAiB,UAAU;gBAAc,MAAM;gBAAO,OAAO;YAAiB;YAChG;gBAAE,IAAI;gBAAM,MAAM;gBAAkB,UAAU;gBAAc,MAAM;gBAAM,OAAO;YAAiB;YAChG;gBAAE,IAAI;gBAAM,MAAM;gBAAa,UAAU;gBAAY,MAAM;gBAAM,OAAO;YAAc;YACtF;gBAAE,IAAI;gBAAM,MAAM;gBAAS,UAAU;gBAAY,MAAM;gBAAM,OAAO;YAAc;YAClF;gBAAE,IAAI;gBAAM,MAAM;gBAAa,UAAU;gBAAY,MAAM;gBAAM,OAAO;YAAc;YACtF;gBAAE,IAAI;gBAAM,MAAM;gBAAO,UAAU;gBAAc,MAAM;gBAAM,OAAO;YAAc;YAClF;gBAAE,IAAI;gBAAM,MAAM;gBAAO,UAAU;gBAAc,MAAM;gBAAM,OAAO;YAAc;YAClF;gBAAE,IAAI;gBAAM,MAAM;gBAAgB,UAAU;gBAAc,MAAM;gBAAM,OAAO;YAAc;SAC5F;QACD,MAAM;YACJ;gBACE,IAAI;gBACJ,MAAM;gBACN,OAAO;gBACP,aAAa;gBACb,MAAM,oMAAA,CAAA,QAAK;YACb;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,OAAO;gBACP,aAAa;gBACb,MAAM,sMAAA,CAAA,SAAM;YACd;YACA;gBACE,IAAI;gBACJ,MAAM;gBACN,OAAO;gBACP,aAAa;gBACb,MAAM,gMAAA,CAAA,MAAG;YACX;SACD;IACH;CACD","debugId":null}},
    {"offset": {"line": 976, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/hooks/useGameLogic.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useRef } from 'react';\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { gameLevels, GameItem } from '@/public/data/conjuntos/gameLevels';\r\n\r\nexport const useGameLogic = () => {\r\n  const { toast } = useToast();\r\n  \r\n  const [currentLevel, setCurrentLevel] = useState(0);\r\n  const [items, setItems] = useState(gameLevels[0].items);\r\n  const [score, setScore] = useState(0);\r\n  const [completedSets, setCompletedSets] = useState<string[]>([]);\r\n  const [totalScore, setTotalScore] = useState(0);\r\n  const dragItem = useRef<GameItem | null>(null);\r\n\r\n  const currentGameLevel = gameLevels[currentLevel];\r\n  const isLastLevel = currentLevel === gameLevels.length - 1;\r\n  const isLevelComplete = completedSets.length === currentGameLevel.sets.length;\r\n  const isGameComplete = isLastLevel && isLevelComplete;\r\n\r\n  const handleDragStart = (item: GameItem) => {\r\n    dragItem.current = item;\r\n    console.log('Iniciando arrastre:', item.name);\r\n  };\r\n\r\n  const handleDrop = (setId: string) => {\r\n    if (!dragItem.current) return;\r\n\r\n    const item = dragItem.current;\r\n    console.log('Soltando:', item.name, 'en conjunto:', setId);\r\n\r\n    if (item.category === setId) {\r\n      // Clasificación correcta\r\n      setItems(prev => prev.filter(i => i.id !== item.id));\r\n      setScore(prev => prev + 10);\r\n      \r\n      toast({\r\n        title: \"¡Excelente conexión neural! 🧠\",\r\n        description: `${item.name} pertenece a ${currentGameLevel.sets.find(s => s.id === setId)?.name}`,\r\n        duration: 2000,\r\n      });\r\n\r\n      // Verificar si el conjunto está completo\r\n      const remainingItemsInSet = items.filter(i => i.category === setId && i.id !== item.id);\r\n      if (remainingItemsInSet.length === 0 && !completedSets.includes(setId)) {\r\n        setCompletedSets(prev => [...prev, setId]);\r\n        toast({\r\n          title: \"¡Conjunto completado! 🎉\",\r\n          description: \"Has activado todas las conexiones sinápticas\",\r\n          duration: 3000,\r\n        });\r\n      }\r\n    } else {\r\n      // Clasificación incorrecta\r\n      toast({\r\n        title: \"Conexión sináptica interrumpida\",\r\n        description: \"Intenta con otro conjunto neural\",\r\n        duration: 2000,\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n\r\n    dragItem.current = null;\r\n  };\r\n\r\n  const handleNextLevel = () => {\r\n    if (!isLastLevel) {\r\n      setTotalScore(prev => prev + score);\r\n      setCurrentLevel(prev => prev + 1);\r\n      setItems(gameLevels[currentLevel + 1].items);\r\n      setScore(0);\r\n      setCompletedSets([]);\r\n      \r\n      toast({\r\n        title: \"¡Nuevo nivel desbloqueado! 🚀\",\r\n        description: `Nivel ${currentLevel + 2}: ${gameLevels[currentLevel + 1].title}`,\r\n        duration: 3000,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setCurrentLevel(0);\r\n    setItems(gameLevels[0].items);\r\n    setScore(0);\r\n    setTotalScore(0);\r\n    setCompletedSets([]);\r\n    \r\n    toast({\r\n      title: \"¡Juego reiniciado! 🔄\",\r\n      description: \"Comenzando desde el nivel 1\",\r\n      duration: 2000,\r\n    });\r\n  };\r\n\r\n  return {\r\n    currentLevel,\r\n    items,\r\n    score,\r\n    completedSets,\r\n    totalScore,\r\n    currentGameLevel,\r\n    isLastLevel,\r\n    isLevelComplete,\r\n    isGameComplete,\r\n    handleDragStart,\r\n    handleDrop,\r\n    handleNextLevel,\r\n    handleRestart\r\n  };\r\n};"],"names":[],"mappings":"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","debugId":null}}]
}