{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/components/molecules/DraggableItem.tsx"],"sourcesContent":["\"use client\"\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\n\r\ninterface GameItem {\r\n  id: string;\r\n  name: string;\r\n  category: string;\r\n  icon: string;\r\n  color: string;\r\n}\r\n\r\ninterface DraggableItemProps {\r\n  item: GameItem;\r\n  onDragStart: (item: GameItem) => void;\r\n}\r\n\r\nexport function DraggableItem ({ item, onDragStart }: DraggableItemProps){\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const itemRef = useRef<HTMLDivElement>(null);\r\n  const iconRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!itemRef.current || !iconRef.current) return;\r\n\r\n    // Animación de entrada con GSAP\r\n    gsap.fromTo(itemRef.current, \r\n      { \r\n        scale: 0, \r\n        opacity: 0, \r\n        rotation: -180 \r\n      },\r\n      { \r\n        scale: 1, \r\n        opacity: 1, \r\n        rotation: 0, \r\n        duration: 0.8, \r\n        ease: \"back.out(1.7)\",\r\n        delay: Math.random() * 0.5\r\n      }\r\n    );\r\n\r\n    // Animación de pulso neural para el ícono\r\n    gsap.to(iconRef.current, {\r\n      scale: 1.1,\r\n      duration: 2,\r\n      repeat: -1,\r\n      yoyo: true,\r\n      ease: \"power2.inOut\"\r\n    });\r\n\r\n    // Animación de flotación suave\r\n    gsap.to(itemRef.current, {\r\n      y: -10,\r\n      duration: 3,\r\n      repeat: -1,\r\n      yoyo: true,\r\n      ease: \"power1.inOut\",\r\n      delay: Math.random() * 2\r\n    });\r\n  }, []);\r\n\r\n  const handleDragStart = (e: React.DragEvent) => {\r\n    onDragStart(item);\r\n    setIsDragging(true);\r\n    e.dataTransfer.effectAllowed = 'move';\r\n    \r\n    // Animación de arrastre con GSAP\r\n    if (itemRef.current) {\r\n      gsap.to(itemRef.current, {\r\n        scale: 1.2,\r\n        rotation: 15,\r\n        opacity: 0.8,\r\n        duration: 0.3,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n    \r\n    console.log('DragStart en DraggableItem:', item.name);\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    setIsDragging(false);\r\n    \r\n    // Restaurar estado normal con GSAP\r\n    if (itemRef.current) {\r\n      gsap.to(itemRef.current, {\r\n        scale: 1,\r\n        rotation: 0,\r\n        opacity: 1,\r\n        duration: 0.4,\r\n        ease: \"elastic.out(1, 0.5)\"\r\n      });\r\n    }\r\n    \r\n    console.log('DragEnd en DraggableItem:', item.name);\r\n  };\r\n\r\n  const handleMouseEnter = () => {\r\n    if (!isDragging && itemRef.current) {\r\n      gsap.to(itemRef.current, {\r\n        scale: 1.05,\r\n        duration: 0.3,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (!isDragging && itemRef.current) {\r\n      gsap.to(itemRef.current, {\r\n        scale: 1,\r\n        duration: 0.3,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={itemRef}\r\n      draggable\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      className={`\r\n        ${item.color} \r\n        p-4 rounded-2xl border-2 border-gray-200 shadow-md cursor-move \r\n        hover:shadow-lg hover:border-blue-300\r\n        flex flex-col items-center gap-2\r\n        select-none\r\n      `}\r\n    >\r\n      <div ref={iconRef} className=\"text-3xl\">\r\n        {item.icon}\r\n      </div>\r\n      <span className=\"text-sm font-semibold text-gray-700 text-center\">\r\n        {item.name}\r\n      </span>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAiBO,SAAS,cAAe,EAAE,IAAI,EAAE,WAAW,EAAsB;IACtE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IACvC,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,QAAQ,OAAO,IAAI,CAAC,QAAQ,OAAO,EAAE;QAE1C,gCAAgC;QAChC,6IAAA,CAAA,OAAI,CAAC,MAAM,CAAC,QAAQ,OAAO,EACzB;YACE,OAAO;YACP,SAAS;YACT,UAAU,CAAC;QACb,GACA;YACE,OAAO;YACP,SAAS;YACT,UAAU;YACV,UAAU;YACV,MAAM;YACN,OAAO,KAAK,MAAM,KAAK;QACzB;QAGF,0CAA0C;QAC1C,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;YACvB,OAAO;YACP,UAAU;YACV,QAAQ,CAAC;YACT,MAAM;YACN,MAAM;QACR;QAEA,+BAA+B;QAC/B,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;YACvB,GAAG,CAAC;YACJ,UAAU;YACV,QAAQ,CAAC;YACT,MAAM;YACN,MAAM;YACN,OAAO,KAAK,MAAM,KAAK;QACzB;IACF,GAAG,EAAE;IAEL,MAAM,kBAAkB,CAAC;QACvB,YAAY;QACZ,cAAc;QACd,EAAE,YAAY,CAAC,aAAa,GAAG;QAE/B,iCAAiC;QACjC,IAAI,QAAQ,OAAO,EAAE;YACnB,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;gBACvB,OAAO;gBACP,UAAU;gBACV,SAAS;gBACT,UAAU;gBACV,MAAM;YACR;QACF;QAEA,QAAQ,GAAG,CAAC,+BAA+B,KAAK,IAAI;IACtD;IAEA,MAAM,gBAAgB;QACpB,cAAc;QAEd,mCAAmC;QACnC,IAAI,QAAQ,OAAO,EAAE;YACnB,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;gBACvB,OAAO;gBACP,UAAU;gBACV,SAAS;gBACT,UAAU;gBACV,MAAM;YACR;QACF;QAEA,QAAQ,GAAG,CAAC,6BAA6B,KAAK,IAAI;IACpD;IAEA,MAAM,mBAAmB;QACvB,IAAI,CAAC,cAAc,QAAQ,OAAO,EAAE;YAClC,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;gBACvB,OAAO;gBACP,UAAU;gBACV,MAAM;YACR;QACF;IACF;IAEA,MAAM,mBAAmB;QACvB,IAAI,CAAC,cAAc,QAAQ,OAAO,EAAE;YAClC,6IAAA,CAAA,OAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,EAAE;gBACvB,OAAO;gBACP,UAAU;gBACV,MAAM;YACR;QACF;IACF;IAEA,qBACE,8OAAC;QACC,KAAK;QACL,SAAS;QACT,aAAa;QACb,WAAW;QACX,cAAc;QACd,cAAc;QACd,WAAW,CAAC;QACV,EAAE,KAAK,KAAK,CAAC;;;;;MAKf,CAAC;;0BAED,8OAAC;gBAAI,KAAK;gBAAS,WAAU;0BAC1B,KAAK,IAAI;;;;;;0BAEZ,8OAAC;gBAAK,WAAU;0BACb,KAAK,IAAI;;;;;;;;;;;;AAIlB","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/components/molecules/GameHeader.tsx"],"sourcesContent":["\"use client\";\r\nimport { Brain, Trophy, Target } from 'lucide-react';\r\nimport { useRef, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\n\r\ninterface GameHeaderProps {\r\n  score: number;\r\n  completedSets: number;\r\n  totalSets: number;\r\n}\r\n\r\nexport default function GameHeader ({ score, completedSets, totalSets }: GameHeaderProps) {\r\n  const progress = (completedSets / totalSets) * 100;\r\n  const headerRef = useRef<HTMLDivElement>(null);\r\n  const brainRef = useRef<SVGSVGElement>(null);\r\n  const progressBarRef = useRef<HTMLDivElement>(null);\r\n  const scoreRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!headerRef.current || !brainRef.current) return;\r\n\r\n    // Animación de entrada del header\r\n    gsap.fromTo(headerRef.current, \r\n      { \r\n        y: -100, \r\n        opacity: 0 \r\n      },\r\n      { \r\n        y: 0, \r\n        opacity: 1, \r\n        duration: 1, \r\n        ease: \"bounce.out\" \r\n      }\r\n    );\r\n\r\n    // Animación de pulso neural continuo para el cerebro\r\n    gsap.to(brainRef.current, {\r\n      scale: 1.1,\r\n      duration: 1.5,\r\n      repeat: -1,\r\n      yoyo: true,\r\n      ease: \"power2.inOut\"\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Animación de la barra de progreso\r\n    if (progressBarRef.current) {\r\n      gsap.to(progressBarRef.current, {\r\n        width: `${progress}%`,\r\n        duration: 1,\r\n        ease: \"power2.out\"\r\n      });\r\n    }\r\n  }, [progress]);\r\n\r\n  useEffect(() => {\r\n    // Animación del score cuando cambia\r\n    if (scoreRef.current) {\r\n      gsap.fromTo(scoreRef.current, \r\n        { \r\n          scale: 1.3, \r\n          color: \"#f59e0b\" \r\n        },\r\n        { \r\n          scale: 1, \r\n          color: \"#92400e\",\r\n          duration: 0.5, \r\n          ease: \"elastic.out(1, 0.5)\" \r\n        }\r\n      );\r\n    }\r\n  }, [score]);\r\n\r\n  return (\r\n    <div ref={headerRef} className=\"bg-white rounded-3xl p-6 mb-8 shadow-xl border border-gray-200\">\r\n      <div className=\"flex flex-col md:flex-row items-center justify-between gap-6\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"bg-gradient-to-br from-blue-500 to-purple-600 p-4 rounded-2xl\">\r\n            <Brain ref={brainRef} className=\"w-8 h-8 text-white\" />\r\n          </div>\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-gray-800\">\r\n              🧠 Clasifica y Agrupa\r\n            </h1>\r\n            <p className=\"text-gray-600\">\r\n              Conecta los elementos con sus conjuntos neuronales\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-6\">\r\n          <div className=\"flex items-center gap-2 bg-yellow-50 px-4 py-2 rounded-xl border border-yellow-200\">\r\n            <Trophy className=\"w-5 h-5 text-yellow-600\" />\r\n            <span ref={scoreRef} className=\"font-bold text-yellow-800\">{score} pts</span>\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-2 bg-blue-50 px-4 py-2 rounded-xl border border-blue-200\">\r\n            <Target className=\"w-5 h-5 text-blue-600\" />\r\n            <span className=\"font-bold text-blue-800\">\r\n              {completedSets}/{totalSets} conjuntos\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Barra de progreso neuronal */}\r\n      <div className=\"mt-6\">\r\n        <div className=\"flex justify-between items-center mb-2\">\r\n          <span className=\"text-sm font-semibold text-gray-600\">\r\n            Progreso de Conexiones Sinápticas\r\n          </span>\r\n          <span className=\"text-sm font-bold text-blue-600\">\r\n            {Math.round(progress)}%\r\n          </span>\r\n        </div>\r\n        <div className=\"w-full bg-gray-200 rounded-full h-3 overflow-hidden\">\r\n          <div \r\n            ref={progressBarRef}\r\n            className=\"h-full bg-gradient-to-r from-blue-500 to-green-500 rounded-full\"\r\n            style={{ width: '0%' }}\r\n          >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/components/templates/conjuntos/GamesTemplate.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\n\r\ninterface BackgroundTemplateProps {\r\n  children: React.ReactNode;\r\n  backgroundGradient?: string;\r\n  className?: string;\r\n}\r\n\r\nconst GamesTemplate: React.FC<BackgroundTemplateProps> = ({\r\n  children,\r\n  backgroundGradient = \"bg-gradient-to-br from-pink-50 to-purple-50\",\r\n  className = \"\",\r\n}) => {\r\n  return (\r\n    <div className={`min-h-screen relative overflow-hidden ${backgroundGradient} ${className}`}>\r\n      {/* Animated Background Elements */}\r\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\r\n        {/* Floating Circles */}\r\n        <div className=\"absolute top-10 left-10 w-20 h-20 bg-white/20 rounded-full animate-bounce opacity-60\"></div>\r\n        <div className=\"absolute top-32 right-20 w-16 h-16 bg-yellow-200/30 rounded-full animate-pulse\"></div>\r\n        <div className=\"absolute bottom-20 left-1/4 w-24 h-24 bg-blue-200/25 rounded-full animate-bounce delay-1000\"></div>\r\n        <div className=\"absolute bottom-40 right-1/3 w-12 h-12 bg-green-200/30 rounded-full animate-pulse delay-500\"></div>\r\n        \r\n        {/* Floating Geometric Shapes */}\r\n        <div className=\"absolute top-1/4 left-1/3 w-8 h-8 bg-purple-300/40 rotate-45 animate-spin-slow\"></div>\r\n        <div className=\"absolute top-2/3 right-1/4 w-6 h-6 bg-pink-300/35 animate-pulse delay-700\"></div>\r\n        <div className=\"absolute top-1/2 left-1/6 w-10 h-10 bg-indigo-200/30 rounded-full animate-bounce delay-300\"></div>\r\n        \r\n        {/* Mathematical Symbols */}\r\n        <div className=\"absolute top-16 right-1/3 text-3xl text-purple-300/40 animate-float font-bold\">∪</div>\r\n        <div className=\"absolute bottom-32 left-1/5 text-2xl text-pink-300/40 animate-float delay-1000 font-bold\">∩</div>\r\n        <div className=\"absolute top-1/3 right-1/6 text-4xl text-blue-300/30 animate-pulse delay-500 font-bold\">∈</div>\r\n        <div className=\"absolute bottom-1/4 right-2/3 text-2xl text-green-300/40 animate-bounce delay-700 font-bold\">⊆</div>\r\n        \r\n        {/* Additional Decorative Elements */}\r\n        <div className=\"absolute top-3/4 left-2/3 w-14 h-14 border-4 border-yellow-200/30 rounded-full animate-spin-slow\"></div>\r\n        <div className=\"absolute top-1/6 left-2/3 w-18 h-18 border-2 border-purple-200/25 animate-pulse delay-300\"></div>\r\n      </div>\r\n\r\n      {/* Content Container */}\r\n      <div className=\"relative z-10\">\r\n        {children}\r\n      </div>\r\n\r\n      {/* Custom CSS for additional animations */}\r\n      <style jsx>{`\r\n        @keyframes float {\r\n          0%, 100% {\r\n            transform: translateY(0px);\r\n          }\r\n          50% {\r\n            transform: translateY(-10px);\r\n          }\r\n        }\r\n        \r\n        @keyframes spin-slow {\r\n          from {\r\n            transform: rotate(0deg);\r\n          }\r\n          to {\r\n            transform: rotate(360deg);\r\n          }\r\n        }\r\n        \r\n        .animate-float {\r\n          animation: float 3s ease-in-out infinite;\r\n        }\r\n        \r\n        .animate-spin-slow {\r\n          animation: spin-slow 8s linear infinite;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamesTemplate;"],"names":[],"mappings":";;;;;AAAA;;;AASA,MAAM,gBAAmD,CAAC,EACxD,QAAQ,EACR,qBAAqB,6CAA6C,EAClE,YAAY,EAAE,EACf;IACC,qBACE,8OAAC;kDAAe,CAAC,sCAAsC,EAAE,mBAAmB,CAAC,EAAE,WAAW;;0BAExF,8OAAC;0DAAc;;kCAEb,8OAAC;kEAAc;;;;;;kCACf,8OAAC;kEAAc;;;;;;kCACf,8OAAC;kEAAc;;;;;;kCACf,8OAAC;kEAAc;;;;;;kCAGf,8OAAC;kEAAc;;;;;;kCACf,8OAAC;kEAAc;;;;;;kCACf,8OAAC;kEAAc;;;;;;kCAGf,8OAAC;kEAAc;kCAAgF;;;;;;kCAC/F,8OAAC;kEAAc;kCAA2F;;;;;;kCAC1G,8OAAC;kEAAc;kCAAyF;;;;;;kCACxG,8OAAC;kEAAc;kCAA8F;;;;;;kCAG7G,8OAAC;kEAAc;;;;;;kCACf,8OAAC;kEAAc;;;;;;;;;;;;0BAIjB,8OAAC;0DAAc;0BACZ;;;;;;;;;;;;;;;;AAiCT;uCAEe","debugId":null}},
    {"offset": {"line": 553, "column": 0}, "map": {"version":3,"sources":["file:///D:/10.%20PROYECTO%20DE%20GRADO/Repositorio%20Proyecto%20de%20grado/mentamatica_app/frontend/app/modules/conjuntos/clasificaAgrupa/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { DraggableItem } from '@/components/molecules/DraggableItem';\r\nimport DropZone from '@/components/atoms/DropZone';\r\nimport GameHeader from '@/components/molecules/GameHeader';\r\nimport { Brain, Target, Zap } from 'lucide-react';\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport GamesTemplate from '@/components/templates/conjuntos/GamesTemplate';\r\n\r\ninterface GameItem {\r\n  id: string;\r\n  name: string;\r\n  category: string;\r\n  icon: string;\r\n  color: string;\r\n}\r\n\r\ninterface GameSet {\r\n  id: string;\r\n  name: string;\r\n  color: string;\r\n  description: string;\r\n  icon: any;\r\n}\r\n\r\nexport default function Page() {\r\n  const { toast } = useToast();\r\n\r\n  const [items, setItems] = useState<GameItem[]>([]);\r\n  const [sets, setSets] = useState<GameSet[]>([]);\r\n  const [score, setScore] = useState(0);\r\n  const [completedSets, setCompletedSets] = useState<string[]>([]);\r\n  const dragItem = useRef<GameItem | null>(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/data/conjuntos/data.json\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setItems(data.gameItems);\r\n        setSets(data.gameSets);\r\n      })\r\n      .catch((err) => console.error(\"Error al cargar datos:\", err));\r\n  }, []);\r\n\r\n  const handleDragStart = (item: GameItem) => {\r\n    dragItem.current = item;\r\n    console.log('Iniciando arrastre:', item.name);\r\n  };\r\n\r\n  const handleDrop = (setId: string) => {\r\n    if (!dragItem.current) return;\r\n\r\n    const item = dragItem.current;\r\n    console.log('Soltando:', item.name, 'en conjunto:', setId);\r\n\r\n    if (item.category === setId) {\r\n      // Clasificación correcta\r\n      setItems(prev => prev.filter(i => i.id !== item.id));\r\n      setScore(prev => prev + 10);\r\n\r\n      toast({\r\n        title: \"¡Excelente conexión neural! 🧠\",\r\n        description: `${item.name} pertenece a ${sets.find(s => s.id === setId)?.name}`,\r\n        duration: 2000,\r\n      });\r\n\r\n      // Verificar si el conjunto está completo\r\n      const remainingItemsInSet = items.filter(i => i.category === setId && i.id !== item.id);\r\n      if (remainingItemsInSet.length === 0) {\r\n        setCompletedSets(prev => [...prev, setId]);\r\n        toast({\r\n          title: \"¡Conjunto completado! 🎉\",\r\n          description: \"Has activado todas las conexiones sinápticas\",\r\n          duration: 3000,\r\n        });\r\n      }\r\n    } else {\r\n      // Clasificación incorrecta\r\n      toast({\r\n        title: \"Conexión sináptica interrumpida\",\r\n        description: \"Intenta con otro conjunto neural\",\r\n        duration: 2000,\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n\r\n    dragItem.current = null;\r\n  };\r\n\r\n  const isGameComplete = completedSets.length === sets.length;\r\n\r\n  return (\r\n    <GamesTemplate>\r\n      <div className=\"max-w-6xl mx-auto pt-4\">\r\n        <GameHeader score={score} completedSets={completedSets.length} totalSets={sets.length} />\r\n\r\n        {isGameComplete ? (\r\n          <div className=\"text-center py-16 gentle-float\">\r\n            <div className=\"bg-white rounded-3xl p-8 shadow-2xl border border-green-200\">\r\n              <div className=\"text-6xl mb-4\">🧠✨</div>\r\n              <h2 className=\"text-4xl font-bold text-green-600 mb-4\">¡Red Neural Completada!</h2>\r\n              <p className=\"text-xl text-gray-600 mb-6\">\r\n                Has establecido todas las conexiones sinápticas correctamente\r\n              </p>\r\n              <div className=\"text-3xl font-bold text-blue-600\">\r\n                Puntuación Final: {score} puntos\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n            {/* Área de elementos arrastrables */}\r\n            <div className=\"space-y-6\">\r\n              <div className=\"bg-white rounded-2xl p-6 shadow-lg border border-gray-200\">\r\n                <h2 className=\"text-2xl font-bold text-gray-800 mb-4 flex items-center gap-2\">\r\n                  <Brain className=\"text-blue-500\" />\r\n                  Elementos Neurocientíficos\r\n                </h2>\r\n                <p className=\"text-gray-600 mb-6\">\r\n                  Arrastra cada elemento al conjunto correspondiente para activar las conexiones sinápticas\r\n                </p>\r\n                <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-4\">\r\n                  {items.map((item) => (\r\n                    <DraggableItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      onDragStart={handleDragStart}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Área de conjuntos */}\r\n            <div className=\"space-y-4\">\r\n              <h2 className=\"text-2xl font-bold text-gray-800 flex items-center gap-2\">\r\n                <Target className=\"text-green-500\" />\r\n                Conjuntos Neuronales\r\n              </h2>\r\n              {sets.map((set) => (\r\n                <DropZone\r\n                  key={set.id}\r\n                  set={set}\r\n                  onDrop={handleDrop}\r\n                  isCompleted={completedSets.includes(set.id)}\r\n                  itemCount={items.filter(item => item.category === set.id).length}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </GamesTemplate>\r\n  );\r\n};\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}